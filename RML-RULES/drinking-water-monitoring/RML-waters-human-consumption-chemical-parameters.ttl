@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .
@prefix rr: <http://www.w3.org/ns/r2rml#> .
@prefix rml: <http://semweb.mmlab.be/ns/rml#> .
@prefix ql: <http://semweb.mmlab.be/ns/ql#>.
@prefix fnml: <http://semweb.mmlab.be/ns/fnml#> .
@prefix grel: <http://users.ugent.be/~bjdmeest/function/grel.ttl#> .
@prefix fno: <https://w3id.org/function/ontology#> .
@prefix idlab-fn: <http://example.com/idlab/function/> .
@prefix sd: <http://www.w3.org/ns/sparql-service-description#> .
@prefix ispra-emf: <https://w3id.org/italia/env/onto/inspire-mf/>.
@prefix ispra-plc: <https://w3id.org/italia/env/onto/place/> .
@prefix ispra-top: <https://w3id.org/italia/env/onto/top/> .
@prefix hydro: <https://w3id.org/whow/onto/hydrography/>.
@prefix w-mon: <https://w3id.org/whow/onto/water-monitoring/>.
@prefix iotapit: <https://w3id.org/italia/onto/IoT/>.
@prefix l0: <https://w3id.org/italia/onto/l0/>.
@prefix tiapit: <https://w3id.org/italia/onto/TI/>.
@prefix hm: <https://w3id.org/whow/onto/health-monitoring/> .
@prefix clv: <https://w3id.org/italia/onto/CLV>.
@base <https://w3id.org/italia/lombardia/data/> .

#java -jar .\rmlmapper-4.15.0-r361-all.jar -m RML-waters-human-consumption-chemical-parameters.ttl -o RML-waters-human-consumption-chemical-parameters-output.ttl -s turtle


# #LogicalSourceWatersForHumanConsumption
<#LogicalSourceWatersForHumanConsumption> a rml:BaseSource ;
    rml:source "beda-kb7b.csv" ;
    rml:referenceFormulation ql:CSV .

    ##Logical Source PROVINCE RDF
    <#InputSPARQL>
        a sd:Service ;
        sd:endpoint <https://schema.gov.it/sparql> ;
        sd:supportedLanguage sd:SPARQL11Query ;
        sd:resultFormat <http://www.w3.org/ns/formats/SPARQL_Results_JSON> .

    <#LogicalSourcePROVINCERDF> a rml:BaseSource ;
         rml:source <#InputSPARQL>;
         rml:referenceFormulation ql:JSONPath;
         rml:iterator "$.results.bindings[*]";
         rml:query """
         PREFIX skos: <http://www.w3.org/2004/02/skos/core#>
         PREFIX clv: <https://w3id.org/italia/onto/CLV/>

         SELECT ?s ?provincia ?ID
         WHERE { ?s a skos:Concept ;
              skos:inScheme <https://w3id.org/italia/controlled-vocabulary/territorial-classifications/provinces> ;
              skos:notation ?ID ;
              clv:acronym ?provincia .

         } """
    .

    ##Logical Source CITY RDF
    <#LogicalSourceCITYRDF> a rml:BaseSource ;
          rml:source <#InputSPARQL>;
          rml:referenceFormulation ql:JSONPath;
          rml:iterator "$.results.bindings[*]";
          rml:query """
          PREFIX skos: <http://www.w3.org/2004/02/skos/core#>
    PREFIX clv: <https://w3id.org/italia/onto/CLV/>
    PREFIX ti: <https://w3id.org/italia/onto/TI/>
    SELECT ?s ?ID ?nome ?starttime ?endTime
    WHERE { ?s a skos:Concept ;
            skos:inScheme <https://w3id.org/italia/controlled-vocabulary/territorial-classifications/cities> ;
            skos:notation ?ID ;
            skos:prefLabel ?nome ;
            clv:hasSOValidity/ti:endTime ?endTime ;
            clv:hasSOValidity/ti:startTime ?starttime ;
            clv:hasHigherRank <https://w3id.org/italia/controlled-vocabulary/territorial-classifications/regions/03> .
            FILTER (str(?endTime)="9999-12-31")

    }
     """
          .

###########################################################
##                  MAPPING RULES
##########################################################

#### GROUND WATERS OBSERVATION MAPPING
                 <#WatersForHumanConsumptionObservationMapping> a rr:TriplesMap;
                 rml:logicalSource <#LogicalSourceWatersForHumanConsumption> ;
                  rr:subjectMap [
                    fnml:functionValue [
                      rr:predicateObjectMap [
                        rr:predicate fno:executes ;
                        rr:objectMap [ rr:constant idlab-fn:trueCondition ]
                      ];
                      rr:predicateObjectMap [
                        rr:predicate idlab-fn:strBoolean ;
                        rr:objectMap <#IsChimico>
                      ];
                      rr:predicateObjectMap [
                        rr:predicate idlab-fn:str ;
                        rr:objectMap <#PhysicoChemicalObservationMapping>

                      ]
                    ] ;
                    rr:class w-mon:DrinkingWaterObservation , w-mon:WaterChemicalParameterObservation
                 ] ;
                 rr:predicateObjectMap [
                  rr:predicate rdfs:label ;
                  rr:objectMap [ rr:template "Observation for the chemical parameter {parametro} with value {valore_testuale} {unit_misura} for waters for human consumption (in province {provincia_punto_prelievo} and city {comune_punto_prelievo}) done at {data_referto} for year {anno_referto}" ; rr:language "en" ]
                 ];
                 rr:predicateObjectMap [
                  rr:predicate rdfs:label ;
                  rr:objectMap [ rr:template "Osservazione del parametro chimico {parametro} con valore {valore_testuale} {unit_misura} per acque per il consumo umano (in provincia di {provincia_punto_prelievo} e comune {comune_punto_prelievo}) fatta in data {data_referto} nell'anno {anno_referto}" ; rr:language "it" ]
                 ];
                 rr:predicateObjectMap [
                  rr:predicate w-mon:hasObservationSample ;
                  rr:objectMap <#URIGeometryForWaterSample1>
                  #rr:objectMap [ rr:template "https://w3id.org/italia/lombardia/data/water-sample/{latitudine}-{longitudine}"; rr:termType rr:IRI ]
                 ] ;
                 rr:predicateObjectMap [
                   rr:predicate w-mon:hasResult ;
                   rr:objectMap <#URLifyObservationResultForHWC>
                 ];
                 rr:predicateObjectMap [
                    rr:predicate w-mon:hasWaterObservableProperty ;
                    rr:objectMap <#URIObservablePropertiesCASMappingForHWC>
                 ] ;
                 rr:predicateObjectMap [
                    rr:predicate w-mon:hasChemicalSubstance ;
                    rr:objectMap [ rr:template "https://w3id.org/whow/controlled-vocabulary/chemical-substances/{cas}" ; rr:termType rr:IRI ]
                 ] ;
                 rr:predicateObjectMap [
                   rr:predicate tiapit:hasTemporalCoverage ;
                   rr:objectMap [ rr:template "https://w3id.org/italia/lombardia/data/year/{anno_referto}"; rr:termType rr:IRI ]
                 ];
                 rr:predicateObjectMap [
                   rr:predicate ispra-emf:generationTime ;
                   rr:objectMap [ rr:template "https://w3id.org/italia/lombardia/data/temporal-entity/{data_referto}"; rr:termType rr:IRI ]
                 ].



<#URIGeometryForWaterSample1>
rr:termType rr:IRI ;
  fnml:functionValue [
   rr:predicateObjectMap [
     rr:predicate fno:executes ;
     rr:objectMap [ rr:constant grel:array_join ]
   ];
   rr:predicateObjectMap [
      rr:predicate grel:p_array_a ;
      rr:objectMap [ rr:constant "https://w3id.org/italia/lombardia/data/water-sample"]
   ] ;
   rr:predicateObjectMap [
      rr:predicate grel:p_array_a ;
      rr:objectMap <#URIGeometryForWaterSample2>
   ] ;
   rr:predicateObjectMap [
      rr:predicate grel:p_string_sep ;
      rr:objectMap [ rr:constant "/" ]
   ]
  ] .

  <#URIGeometryForWaterSample2>
  rr:termType rr:IRI ;
    fnml:functionValue [
     rr:predicateObjectMap [
       rr:predicate fno:executes ;
       rr:objectMap [ rr:constant grel:array_join ]
     ];
     rr:predicateObjectMap [
        rr:predicate grel:p_array_a ;
        rr:objectMap <#SlugifyGeometry1>
     ] ;
     rr:predicateObjectMap [
        rr:predicate grel:p_array_a ;
        rr:objectMap <#SlugifyGeometry2>
     ] ;
     rr:predicateObjectMap [
        rr:predicate grel:p_string_sep ;
        rr:objectMap [ rr:constant "-" ]
     ]
    ] .

<#SlugifyGeometry1>
  fnml:functionValue [
  	rr:predicateObjectMap [
  		rr:predicate fno:executes ;
  		rr:objectMap [ rr:constant idlab-fn:slugify ]
  	];
    rr:predicateObjectMap [
      rr:predicate idlab-fn:str ;
      rr:objectMap [ rml:reference "latitudine"]
    ] ;
   ] .

  <#SlugifyGeometry2>
  fnml:functionValue [
  	rr:predicateObjectMap [
  		rr:predicate fno:executes ;
  		rr:objectMap [ rr:constant idlab-fn:slugify ]
  	];
     rr:predicateObjectMap [
      rr:predicate idlab-fn:str ;
      rr:objectMap [ rml:reference "longitudine"]
    ] ;
   ] .

# ##### URI of Observation Value Mapping
<#URLifyObservationResultForHWC>
rr:termType rr:IRI ;
fnml:functionValue [
 rr:predicateObjectMap [
   rr:predicate fno:executes ;
   rr:objectMap [ rr:constant grel:array_join ]
 ];

  rr:predicateObjectMap [
    rr:predicate grel:p_array_a ;
    rr:objectMap [ rr:constant "https://w3id.org/italia/lombardia/data/observation-value"]
  ] ;
  rr:predicateObjectMap [
    rr:predicate grel:p_array_a ;
    rr:objectMap <#MD5ValueUMForHWC>
  ] ;
  rr:predicateObjectMap [
    rr:predicate grel:p_string_sep ;
    rr:objectMap [ rr:constant "/" ]
  ]
] .


<#MD5ValueUMForHWC>
fnml:functionValue [
  rr:predicateObjectMap [
   rr:predicate fno:executes ;
   rr:objectMap [ rr:constant grel:string_md5 ]
  ];
  rr:predicateObjectMap [
   rr:predicate grel:valueParameter ;
   rr:objectMap <#UnionValueUMForHWC>
  ];
].

<#UnionValueUMForHWC>
fnml:functionValue [
 rr:predicateObjectMap [
   rr:predicate fno:executes ;
   rr:objectMap [ rr:constant grel:array_join ]
 ];
  rr:predicateObjectMap [
    rr:predicate grel:p_array_a ;
    rr:objectMap [ rml:reference "valore_testuale"]
  ] ;
  rr:predicateObjectMap [
    rr:predicate grel:p_array_a ;
    rr:objectMap [ rml:reference "unit_misura"]
  ] ;
  rr:predicateObjectMap [
    rr:predicate grel:p_string_sep ;
    rr:objectMap [ rr:constant "" ]
  ]
] .

<#URIObservablePropertiesCASMappingForHWC> #join con dataset + se non è biologico
rr:termType rr:IRI ;
 fnml:functionValue [
    rr:predicateObjectMap [
      rr:predicate fno:executes ;
      rr:objectMap [ rr:constant grel:controls_if ]
    ];
    rr:predicateObjectMap [
      rr:predicate grel:bool_b ;
      rr:objectMap <#IsCasNull>
    ];
    rr:predicateObjectMap [
      rr:predicate grel:any_false ;
      rr:objectMap [ rr:template "https://w3id.org/italia/lombardia/data/observable-properties/{cas}" ]
    ]
  ] .

<#IsCasNull>
fnml:functionValue [
  rr:predicateObjectMap [
    rr:predicate fno:executes ;
    rr:objectMap [ rr:constant idlab-fn:isNull ]
  ];
  rr:predicateObjectMap [
    rr:predicate idlab-fn:str ;
    rr:objectMap [ rml:reference "CAS" ]
  ]
] .

#######################################
# TEMPORAL ENTITY OBJECT DATE MAPPING
#######################################
<#TemporalEntityDateMappingForHWC> a rr:TriplesMap ;
rml:logicalSource <#LogicalSourceWatersForHumanConsumption>;
rr:subjectMap [
  rr:template "https://w3id.org/italia/lombardia/data/temporal-entity/({data_referto})";
  rr:class ispra-top:TemporalEntity
] ;
rr:predicateObjectMap [
   rr:predicate rdfs:label ;
   rr:objectMap [ rr:template "Temporal Entity: {data_referto}" ; rr:language "en" ]
 ];
 rr:predicateObjectMap [
    rr:predicate rdfs:label ;
    rr:objectMap [ rr:template "Entità temporale: {data_referto}" ; rr:language "it" ]
 ];
 rr:predicateObjectMap [
    rr:predicate ispra-top:time ;
    rr:objectMap [ rml:reference "data_referto" ; rr:datatype xsd:date ]
 ].

# ##########################################
                  # ## TEMPORAL ENTITY OBJECT YEAR MAPPING
                  # ##########################################
                  <#TemporalEntityYearMappingForHWC> a rr:TriplesMap ;
                  rml:logicalSource <#LogicalSourceWatersForHumanConsumption>;
                  rr:subjectMap [
                    rr:template "https://w3id.org/italia/lombardia/data/year/{anno_referto}";
                    rr:class tiapit:Year
                  ];
                  rr:predicateObjectMap [
                     rr:predicate rdfs:label ;
                     rr:objectMap [ rr:template "Year: {anno_referto}" ; rr:language "en" ]
                   ];
                   rr:predicateObjectMap [
                      rr:predicate rdfs:label ;
                      rr:objectMap [ rr:template "Anno: {anno_referto}" ; rr:language "it" ]
                   ];
                   rr:predicateObjectMap [
                      rr:predicate tiapit:year ;
                      rr:objectMap [ rml:reference "anno_referto" ; rr:datatype xsd:gYear ]
                   ].
################################
                  # WATER SAMPLE OBJECT MAPPING
                  ################################
                  <#ObservationSampleMappingForHWC> a rr:TriplesMap;
                  rml:logicalSource <#LogicalSourceWatersForHumanConsumption>;
                    rr:subjectMap [
                    fnml:functionValue [
                     rr:predicateObjectMap [
                       rr:predicate fno:executes ;
                       rr:objectMap [ rr:constant grel:array_join ]
                     ];
                     rr:predicateObjectMap [
                        rr:predicate grel:p_array_a ;
                        rr:objectMap [ rr:constant "https://w3id.org/italia/lombardia/data/water-sample"]
                     ] ;
                     rr:predicateObjectMap [
                        rr:predicate grel:p_array_a ;
                        rr:objectMap <#URIGeometryForWaterSample2>
                     ] ;
                     rr:predicateObjectMap [
                        rr:predicate grel:p_string_sep ;
                        rr:objectMap [ rr:constant "/" ]
                     ]
                    ];
                    rr:termType rr:IRI;
                      rr:class w-mon:WaterSample , w-mon:WaterFeature
                   ];
                   rr:predicateObjectMap [
                      rr:predicate rdfs:label ;
                      rr:objectMap [ rr:template "Water sample taken at {punto_prelievo} in province {provincia_punto_prelievo}, city {comune_punto_prelievo} - (geographical coordinates: {latitudine}-{longitudine})" ; rr:language "en" ]
                    ];
                    rr:predicateObjectMap [
                       rr:predicate rdfs:label ;
                       rr:objectMap [ rr:template "Campione preso presso il punto prelievo {punto_prelievo} in provincia di {provincia_punto_prelievo}, comune {comune_punto_prelievo} - (coordinate geografiche: {latitudine}-{longitudine})" ; rr:language "it" ]
                    ];
                    rr:predicateObjectMap [
                      rr:predicate w-mon:istakenAt ;
                      rr:objectMap [ rr:template "https://w3id.org/italia/lombardia/data/sampling-point/{punto_prelievo}"; rr:termType rr:IRI ]
                    ];
                    rr:predicateObjectMap [
                      rr:predicate w-mon:isSampleOf ;
                      rr:objectMap <#URIWaterForHumanConsumption>
                    ] .


<#URIWaterForHumanConsumption>
             rr:termType rr:IRI ;
             fnml:functionValue [
              rr:predicateObjectMap [
                rr:predicate fno:executes ;
                rr:objectMap [ rr:constant grel:array_join ]
              ] ;
              rr:predicateObjectMap [
                rr:predicate grel:p_array_a ;
                rr:objectMap  [ rr:constant "https://w3id.org/italia/lombardia/data/water-human-consumption"]
              ];
              rr:predicateObjectMap [
                rr:predicate grel:p_array_a ;
                rr:objectMap  <#MD5PPCoord>
              ];
              rr:predicateObjectMap [
                rr:predicate grel:p_string_sep ;
                rr:objectMap [ rr:constant "/" ]
              ];
             ].


#MD5 URI Groundwater body
<#MD5PPCoord>
fnml:functionValue [
  rr:predicateObjectMap [
   rr:predicate fno:executes ;
   rr:objectMap [ rr:constant grel:string_md5 ]
  ];
  rr:predicateObjectMap [
   rr:predicate grel:valueParameter ;
   rr:objectMap <#ArrayJoinPPCoord>
  ];
].

<#ArrayJoinPPCoord>
fnml:functionValue [
  rr:predicateObjectMap [
    rr:predicate fno:executes ;
    rr:objectMap [ rr:constant grel:array_join ]
  ] ;
  rr:predicateObjectMap [
    rr:predicate grel:p_array_a ;
    rr:objectMap  [ rml:reference "punto_prelievo"]
  ];
  rr:predicateObjectMap [
    rr:predicate grel:p_array_a ;
    rr:objectMap  [ rml:reference "latitudine"]
  ];
  rr:predicateObjectMap [
    rr:predicate grel:p_array_a ;
    rr:objectMap  [ rml:reference "longitudine"]
  ];
  rr:predicateObjectMap [
    rr:predicate grel:p_string_sep ;
    rr:objectMap [ rr:constant "-" ]
  ];
].

####################################
# GROUNDWATER BODY OBJ MAPPING
 ####################################
                               <#GroundWaterBodyObjMapping> a rr:TriplesMap;
                               rml:logicalSource <#LogicalSourceWatersForHumanConsumption>;
                                 rr:subjectMap [
                                   fnml:functionValue [
                                    rr:predicateObjectMap [
                                      rr:predicate fno:executes ;
                                      rr:objectMap [ rr:constant grel:array_join ]
                                    ] ;
                                    rr:predicateObjectMap [
                                      rr:predicate grel:p_array_a ;
                                      rr:objectMap  [ rr:constant "https://w3id.org/italia/lombardia/data/water-human-consumption"]
                                    ];
                                    rr:predicateObjectMap [
                                      rr:predicate grel:p_array_a ;
                                      rr:objectMap  <#MD5PPCoord>
                                    ];
                                    rr:predicateObjectMap [
                                      rr:predicate grel:p_string_sep ;
                                      rr:objectMap [ rr:constant "/" ]
                                    ]
                                   ];
                                   rr:class hydro:GroundWaterBody
                                ];
                                rr:predicateObjectMap [
                                   rr:predicate rdfs:label ;
                                   rr:objectMap [ rr:template "Area in proximity of the sampling point {punto_prelievo} in province {provincia_punto_prelievo}, city {comune_punto_prelievo} - (geographical coordinates: {latitudine}-{longitudine})" ; rr:language "en" ]
                                 ];
                                 rr:predicateObjectMap [
                                    rr:predicate rdfs:label ;
                                    rr:objectMap [ rr:template "Area in prossimità del punto prelievo {punto_prelievo} in provincia di {provincia_punto_prelievo}, comune {comune_punto_prelievo} - (coordinate geografiche: {latitudine}-{longitudine})" ; rr:language "it" ]
                                 ];
                                 rr:predicateObjectMap [
                                    rr:predicate ispra-top:name , l0:name ;
                                    rr:objectMap [ rr:template "Area in prossimità del punto prelievo {punto_prelievo} in provincia di {provincia_punto_prelievo}, comune {comune_punto_prelievo} - (coordinate geografiche: {latitudine}-{longitudine})" ; rr:language "it" ]
                                 ];
                                 rr:predicateObjectMap [
                                    rr:predicate ispra-top:name , l0:name ;
                                    rr:objectMap [ rr:template "Area in proximity of the sampling point {punto_prelievo} in province {provincia_punto_prelievo}, city {comune_punto_prelievo} - (geographical coordinates: {latitudine}-{longitudine})" ; rr:language "en" ]
                                 ].

################################################
   # OBSERVATION VALUE OBJECT MAPPING IF RANGE
   ################################################

   <#ObservationValueRangeMappingForHWC> a rr:TriplesMap;
   rml:logicalSource <#LogicalSourceWatersForHumanConsumption>;
     rr:subjectMap [
      fnml:functionValue [
         rr:predicateObjectMap [
           rr:predicate fno:executes ;
           rr:objectMap [ rr:constant idlab-fn:trueCondition ]
         ];
         rr:predicateObjectMap [
           rr:predicate idlab-fn:strBoolean ;
           rr:objectMap <#MinorSegnoMappingForHWC>
         ];
         rr:predicateObjectMap [
           rr:predicate idlab-fn:str ;
           rr:objectMap <#URIObservableValueObjectForHWC>
         ]
       ] ;
       rr:class w-mon:ObservationValue
     ];
     rr:predicateObjectMap [
       rr:predicate rdfs:label ;
       rr:objectMap [ rr:template "Observation value {valore_testuale} {unit_misura}" ; rr:language "en" ]
     ];
     rr:predicateObjectMap [
       rr:predicate rdfs:label ;
       rr:objectMap [ rr:template "Valore dell'osservazione {valore_testuale} {unit_misura}" ; rr:language "it" ]
     ];
     rr:predicateObjectMap [
       rr:predicate w-mon:lowerBound;
       rr:objectMap [ rr:constant "0" ; rr:datatype xsd:float ]
     ];
     rr:predicateObjectMap [
       rr:predicate w-mon:upperBound;
       rr:objectMap [ rml:reference "risultato" ; rr:datatype xsd:float ]
     ];
     rr:predicateObjectMap [
       rr:predicate ispra-top:hasUnitOfMeasure;
       rr:objectMap <#URIforUnitOfMeasureForHWC>
     ].

     <#URIObservableValueObjectForHWC>
       rr:termType rr:IRI ;
         fnml:functionValue [
          rr:predicateObjectMap [
            rr:predicate fno:executes ;
            rr:objectMap [ rr:constant grel:array_join ]
          ];
          rr:predicateObjectMap [
             rr:predicate grel:p_array_a ;
             rr:objectMap [ rr:constant "https://w3id.org/italia/lombardia/data/observation-value"]
          ] ;
          rr:predicateObjectMap [
             rr:predicate grel:p_array_a ;
             rr:objectMap <#MD5ValueUMForHWC>
          ] ;
          rr:predicateObjectMap [
             rr:predicate grel:p_string_sep ;
             rr:objectMap [ rr:constant "/" ]
          ];
         ] .

    <#MinorSegnoMappingForHWC>
  fnml:functionValue [
    rr:predicateObjectMap [
      rr:predicate fno:executes ;
      rr:objectMap [ rr:constant grel:string_contains ]
    ];
    rr:predicateObjectMap [
      rr:predicate grel:valueParameter ;
      rr:objectMap [ rml:reference "segno"]
    ];
    rr:predicateObjectMap [
      rr:predicate grel:string_sub ;
      rr:objectMap [ rr:constant "<" ]
    ]
  ] .

      <#MD5ValueUMForHWC>
fnml:functionValue [
  rr:predicateObjectMap [
   rr:predicate fno:executes ;
   rr:objectMap [ rr:constant grel:string_md5 ]
  ];
  rr:predicateObjectMap [
   rr:predicate grel:valueParameter ;
   rr:objectMap <#UnionValueUMForHWC>
  ];
].

<#UnionValueUMForHWC>
fnml:functionValue [
 rr:predicateObjectMap [
   rr:predicate fno:executes ;
   rr:objectMap [ rr:constant grel:array_join ]
 ];
  rr:predicateObjectMap [
    rr:predicate grel:p_array_a ;
    rr:objectMap [ rml:reference "valore_testuale"]
  ] ;
  rr:predicateObjectMap [
    rr:predicate grel:p_array_a ;
    rr:objectMap [ rml:reference "unit_misura"]
  ] ;
  rr:predicateObjectMap [
    rr:predicate grel:p_string_sep ;
    rr:objectMap [ rr:constant "" ]
  ]
] .

     <#URIforUnitOfMeasureForHWC>
     rr:termType rr:IRI ;
     fnml:functionValue [
      rr:predicateObjectMap [
        rr:predicate fno:executes ;
        rr:objectMap [ rr:constant grel:array_join ]
      ] ;
      rr:predicateObjectMap [
        rr:predicate grel:p_array_a ;
        rr:objectMap  [ rr:constant "https://w3id.org/italia/lombardia/data/measurement-unit"]
      ];
      rr:predicateObjectMap [
        rr:predicate grel:p_array_a ;
        rr:objectMap <#SlugifyUMForHWC>
      ];
      rr:predicateObjectMap [
        rr:predicate grel:p_string_sep ;
        rr:objectMap [ rr:constant "/" ]
      ];
     ].

     <#SlugifyUMForHWC>
     fnml:functionValue [
      rr:predicateObjectMap [
        rr:predicate fno:executes ;
        rr:objectMap [ rr:constant idlab-fn:slugify ]
      ];
       rr:predicateObjectMap [
         rr:predicate idlab-fn:str ;
         rr:objectMap [ rml:reference "unita_di_misura_testuale"]
       ] ;
      ] .

######################################################
     # OBSERVATION VALUE OBJECT MAPPING IF NOT RANGE
     ######################################################
     <#ObservationValueNotRangeMappingForHWC> a rr:TriplesMap;
     rml:logicalSource <#LogicalSourceWatersForHumanConsumption>;
      rr:subjectMap [
        fnml:functionValue [
           rr:predicateObjectMap [
             rr:predicate fno:executes ;
             rr:objectMap [ rr:constant idlab-fn:trueCondition ]
           ];
           rr:predicateObjectMap [
             rr:predicate idlab-fn:strBoolean ;
             rr:objectMap <#NotMinorSegnoMappingForHWC>
           ];
           rr:predicateObjectMap [
             rr:predicate idlab-fn:str ;
             rr:objectMap <#URIObservableValueObjectForHWC>
           ]
         ];
         rr:class w-mon:ObservationValue
      ];
      rr:predicateObjectMap [
        rr:predicate rdfs:label ;
        rr:objectMap [ rr:template "Observation value {risultato} {unit_misura}" ; rr:language "en" ]
      ];
      rr:predicateObjectMap [
        rr:predicate rdfs:label ;
        rr:objectMap [ rr:template "Valore dell'osservazione {risultato} {unit_misura}" ; rr:language "it" ]
      ];
      rr:predicateObjectMap [
        rr:predicate ispra-top:value;
        rr:objectMap [ rml:reference "risultato" ; rr:datatype xsd:float ] #non penso
      ];
      rr:predicateObjectMap [
        rr:predicate ispra-top:hasUnitOfMeasure;
        rr:objectMap <#URIforUnitOfMeasureForHWC>
      ].

      <#NotMinorSegnoMappingForHWC>
      fnml:functionValue [
       rr:predicateObjectMap [
         rr:predicate fno:executes ;
         rr:objectMap [ rr:constant idlab-fn:isNull ]
       ];
       rr:predicateObjectMap [
         rr:predicate idlab-fn:str ;
         rr:objectMap [ rml:reference "segno" ]
       ]
     ] .



  ##################################
     # UNIF OF MEASURE OBJECT MAPPING
     ##################################
     <#UnitOfMeasureMappingForHWC> a rr:TriplesMap;
     rml:logicalSource <#LogicalSourceWatersForHumanConsumption>;
      rr:subjectMap [
        fnml:functionValue [
          rr:predicateObjectMap [
            rr:predicate fno:executes ;
            rr:objectMap [ rr:constant idlab-fn:trueCondition ]
          ];
          rr:predicateObjectMap [
            rr:predicate idlab-fn:strBoolean ;
            rr:objectMap <#IsNotEqualUnita>
          ];
          rr:predicateObjectMap [
            rr:predicate idlab-fn:str ;
            rr:objectMap <#URIUnitOfMeasureNotUnita>
          ];
        ];
         rr:class ispra-top:UnitOfMeasure
      ];
      rr:predicateObjectMap [
         rr:predicate rdfs:label ;
         rr:objectMap [ rr:template "Unit of measure {unit_misura}" ; rr:language "en"]
      ];
      rr:predicateObjectMap [
   rr:predicate rdfs:label ;
   rr:objectMap [ rr:template "Unità di misura {unit_misura}" ; rr:language "it"]
 ];
rr:predicateObjectMap [
   rr:predicate l0:name , ispra-top:name ;
   rr:objectMap [ rml:reference "unita_di_misura_testuale" ; rr:language "it" ]
].

<#URIUnitOfMeasureNotUnita>
rr:termType rr:IRI;
fnml:functionValue [
  rr:predicateObjectMap [
    rr:predicate fno:executes ;
    rr:objectMap [ rr:constant grel:array_join ]
  ] ;
  rr:predicateObjectMap [
    rr:predicate grel:p_array_a ;
    rr:objectMap  [ rr:constant "https://w3id.org/italia/lombardia/data/measurement-unit"]
  ];
  rr:predicateObjectMap [
    rr:predicate grel:p_array_a ;
    rr:objectMap <#SlugifyUMForHWC>
  ];
  rr:predicateObjectMap [
    rr:predicate grel:p_string_sep ;
    rr:objectMap [ rr:constant "/" ]
  ]
 ].

 <#IsNotEqualUnita>
fnml:functionValue [
    rr:predicateObjectMap [
        rr:predicate fno:executes ;
        rr:objectMap [ rr:constant idlab-fn:notEqual ]
    ] ;
    rr:predicateObjectMap [
        rr:predicate grel:valueParameter ;
       rr:objectMap [ rr:constant "unita" ]
    ] ;
    rr:predicateObjectMap [
        rr:predicate grel:valueParameter2 ;
        rr:objectMap [ rml:reference "unita_di_misura_testuale" ]
   ]
] .

##################################
# UNIF OF MEASURE OBJECT MAPPING2
##################################
<#UnitOfMeasureMappingForHWC2> a rr:TriplesMap;
rml:logicalSource <#LogicalSourceWatersForHumanConsumption>;
 rr:subjectMap [
   fnml:functionValue [
     rr:predicateObjectMap [
       rr:predicate fno:executes ;
       rr:objectMap [ rr:constant idlab-fn:trueCondition ]
     ];
     rr:predicateObjectMap [
       rr:predicate idlab-fn:strBoolean ;
       rr:objectMap <#IsEqualUnita>
     ];
     rr:predicateObjectMap [
       rr:predicate idlab-fn:str ;
       rr:objectMap [rr:template "https://w3id.org/italia/lombardia/data/measurement-unit/adimensionale"];
     ]
   ] ;
   rr:termType rr:IRI;
    rr:class ispra-top:UnitOfMeasure
 ];
 rr:predicateObjectMap [
    rr:predicate rdfs:label ;
    rr:objectMap [ rr:template "Unit of measure {unit_misura}" ; rr:language "en"]
 ];
 rr:predicateObjectMap [
    rr:predicate rdfs:label ;
    rr:objectMap [ rr:template "Unità di misura {unit_misura}" ; rr:language "it"]
 ];
 rr:predicateObjectMap [
    rr:predicate l0:name , ispra-top:name ;
    rr:objectMap [ rml:reference "unita_di_misura_testuale" ; rr:language "it" ]
 ].

 <#IsEqualUnita>
 fnml:functionValue [
     rr:predicateObjectMap [
         rr:predicate fno:executes ;
         rr:objectMap [ rr:constant idlab-fn:equal ]
     ] ;
     rr:predicateObjectMap [
         rr:predicate grel:valueParameter ;
        rr:objectMap [ rr:constant "unita" ]
     ] ;
     rr:predicateObjectMap [
         rr:predicate grel:valueParameter2 ;
         rr:objectMap [ rml:reference "unita_di_misura_testuale" ]
    ]
 ] .

 ###########################
# HWC SAMPLING POINT MAPPING
###########################
<#HWCSamplingPointMapping> a rr:TriplesMap;
rml:logicalSource <#LogicalSourceWatersForHumanConsumption>;
rr:subjectMap [
  rr:template "https://w3id.org/italia/lombardia/data/sampling-point/{punto_prelievo}";
  rr:class w-mon:SamplingPoint , ispra-top:Location
 ];
 rr:predicateObjectMap [
  rr:predicate rdfs:label ;
  rr:objectMap [ rr:template "Sampling point: {punto_prelievo}. Geographical coordinates: {latitudine}-{longitudine}" ; rr:language "en"]
];
 rr:predicateObjectMap [
  rr:predicate rdfs:label ;
  rr:objectMap [ rr:template "Punto prelievo: {punto_prelievo}. Coordinate geografiche: {latitudine}-{longitudine}" ; rr:language "it"]
];
rr:predicateObjectMap [
 rr:predicate ispra-plc:hasGeometry ;
 rr:objectMap <#URIGeometryforGeometry>
];
rr:predicateObjectMap [
  rr:predicate clv:fullAddress;
  rr:objectMap [ rml:reference  "indirizzo_punto_prelievo"; xsd:datatype rdfs:literal ]
];
rr:predicateObjectMap [
  rr:predicate hm:isUnderResponsibility;
  rr:objectMap [ rr:template "https://w3id.org/italia/lombardia/data/health-agency/{codice_ente}" ;  rr:termType rr:IRI ; ]
];
rr:predicateObjectMap [
  rr:predicate ispra-plc:hasProvince ;
  rr:objectMap [
     rr:parentTriplesMap <#ProvinceMappingForHWC> ;
     rr:joinCondition [
        rr:child "provincia_punto_prelievo";
        rr:parent "provincia.value" ;
     ] ;
   ] ;
 ]
 ;
 rr:predicateObjectMap [
  rr:predicate ispra-plc:hasMunicipality ;
    rr:objectMap [
       rr:parentTriplesMap <#CityMappingForHWC> ;
       rr:joinCondition [
          rr:child "comune_punto_prelievo";
          rr:parent "nome.value" ;
       ] ;
    ]
].

<#URIGeometryforGeometry>
rr:termType rr:IRI ;
  fnml:functionValue [
   rr:predicateObjectMap [
     rr:predicate fno:executes ;
     rr:objectMap [ rr:constant grel:array_join ]
   ];
   rr:predicateObjectMap [
      rr:predicate grel:p_array_a ;
      rr:objectMap [ rr:constant "https://w3id.org/italia/lombardia/data/geometry"]
   ] ;
   rr:predicateObjectMap [
      rr:predicate grel:p_array_a ;
      rr:objectMap <#URIGeometryForWaterSample2>
   ] ;
   rr:predicateObjectMap [
      rr:predicate grel:p_string_sep ;
      rr:objectMap [ rr:constant "/" ]
   ]
  ] .

  # ##############################
  # ## CITY LINKING
  # ##############################

  <#CityMappingForHWC> a rr:TriplesMap ;
  rml:logicalSource <#LogicalSourceCITYRDF> ;
  rr:subjectMap [
    rr:template "https://w3id.org/italia/controlled-vocabulary/territorial-classifications/cities/{ID.value}-({starttime.value})" ;  rr:termType rr:IRI ;
  ].

  # ##############################
  # ## PROVINCE LINKING
  # ##############################

  <#ProvinceMappingForHWC> a rr:TriplesMap ;
  rml:logicalSource <#LogicalSourcePROVINCERDF> ;
  rr:subjectMap [
    rr:template "https://w3id.org/italia/controlled-vocabulary/territorial-classifications/provinces/{ID.value}" ;  rr:termType rr:IRI ;
  ].

  ####################################
  # GEOMETRY MAPPING OBJECT MAPPING
  ####################################
  <#GeometryMappingForHWC> a rr:TriplesMap ;
  rml:logicalSource <#LogicalSourceWatersForHumanConsumption> ;
  rr:subjectMap [
  fnml:functionValue [
   rr:predicateObjectMap [
     rr:predicate fno:executes ;
     rr:objectMap [ rr:constant grel:array_join ]
   ];
   rr:predicateObjectMap [
      rr:predicate grel:p_array_a ;
      rr:objectMap [ rr:constant "https://w3id.org/italia/lombardia/data/geometry"]
   ] ;
   rr:predicateObjectMap [
      rr:predicate grel:p_array_a ;
      rr:objectMap <#URIGeometryForWaterSample2>
   ] ;
   rr:predicateObjectMap [
      rr:predicate grel:p_string_sep ;
      rr:objectMap [ rr:constant "/" ]
   ]
  ];
   rr:class ispra-plc:Geometry
  ] ;
  rr:predicateObjectMap [
    rr:predicate rdfs:label;
    rr:objectMap [ rr:template "Geometria {latitudine}-{longitudine}" ; rr:language "it" ]
  ] ;
  rr:predicateObjectMap [
    rr:predicate rdfs:label;
    rr:objectMap [ rr:template "Geometry {latitudine}-{longitudine}" ; rr:language "en" ]
  ] ;
  rr:predicateObjectMap [
    rr:predicate ispra-top:isClassifiedBy;
    rr:objectMap [ rr:constant "https://w3id.org/italia/lombardia/data/geometry-type/point"; rr:termType rr:IRI ]
  ] ;
  rr:predicateObjectMap [
    rr:predicate ispra-plc:lat;
    rr:objectMap [ rml:reference "latitudine" ]
  ] ;
  rr:predicateObjectMap [
    rr:predicate ispra-plc:long;
    rr:objectMap [ rml:reference "longitudine" ]
  ] .

  ############################################
  # ## GEOMETRY TYPE MAPPING OBJECT MAPPING
  # ##########################################
  <#GeometryTypeMappingForHWC> a rr:TriplesMap ;
  rml:logicalSource <#LogicalSourceWatersForHumanConsumption> ;
  rr:subjectMap [
    rr:constant "https://w3id.org/italia/lombardia/data/geometry-type/point";
    rr:class ispra-plc:GeometryType
  ] ;
  rr:predicateObjectMap [
    rr:predicate rdfs:label;
    rr:objectMap [ rr:constant "Geometry Type: Point" ; rr:language "en" ]
  ] ;
  rr:predicateObjectMap [
    rr:predicate rdfs:label;
    rr:objectMap [ rr:constant "Tipo di Geometria: Punto" ; rr:language "it" ]
  ] ;
  rr:predicateObjectMap [
    rr:predicate ispra-top:name;
    rr:objectMap [ rr:constant "Punto" ; rr:language "it" ]
  ] ;
  rr:predicateObjectMap [
    rr:predicate ispra-top:name;
    rr:objectMap [ rr:constant "Point" ; rr:language "en" ]
  ] .

  # ##### URI of Observation Value Mapping
  <#URLifyObservationResultForHWC>
  rr:termType rr:IRI ;
  fnml:functionValue [
   rr:predicateObjectMap [
     rr:predicate fno:executes ;
     rr:objectMap [ rr:constant grel:array_join ]
   ];

    rr:predicateObjectMap [
      rr:predicate grel:p_array_a ;
      rr:objectMap [ rr:constant "https://w3id.org/italia/lombardia/data/observation-value"]
    ] ;
    rr:predicateObjectMap [
      rr:predicate grel:p_array_a ;
      rr:objectMap <#MD5ValueUMForHWC>
    ] ;
    rr:predicateObjectMap [
      rr:predicate grel:p_string_sep ;
      rr:objectMap [ rr:constant "/" ]
    ]
  ] .

  <#PhysicoChemicalObservationMapping>
  #rr:termType rr:IRI ;
  fnml:functionValue [
   rr:predicateObjectMap [
     rr:predicate fno:executes ;
     rr:objectMap [ rr:constant grel:array_join ]
   ] ;
   rr:predicateObjectMap [
     rr:predicate grel:p_array_a ;
     rr:objectMap  [ rr:constant "https://w3id.org/italia/lombardia/data/water-observation"]
   ];
   rr:predicateObjectMap [
     rr:predicate grel:p_array_a ;
     rr:objectMap  <#MD5ExecutionForWHC>
   ];
   rr:predicateObjectMap [
     rr:predicate grel:p_string_sep ;
     rr:objectMap [ rr:constant "/" ]
   ];
  ].

  <#MD5ExecutionForWHC>
  fnml:functionValue [
    rr:predicateObjectMap [
     rr:predicate fno:executes ;
     rr:objectMap [ rr:constant grel:string_md5 ]
    ];
    rr:predicateObjectMap [
     rr:predicate grel:valueParameter ;
     rr:objectMap <#ArrayJoinEntryForWHC>
    ];
  ].

  ### Array join intera riga
  <#ArrayJoinEntryForWHC>
  fnml:functionValue [
    rr:predicateObjectMap [
      rr:predicate fno:executes ;
      rr:objectMap [ rr:constant grel:array_join ]
    ] ;
    rr:predicateObjectMap [
      rr:predicate grel:p_array_a ;
      rr:objectMap  [ rml:reference "codice_ente"]
    ];
    rr:predicateObjectMap [
      rr:predicate grel:p_array_a ;
      rr:objectMap  [ rml:reference "ente_controllore"]
    ];
    rr:predicateObjectMap [
      rr:predicate grel:p_array_a ;
      rr:objectMap  [ rml:reference "punto_prelievo"]
    ];
    rr:predicateObjectMap [
      rr:predicate grel:p_array_a ;
      rr:objectMap  [ rml:reference "tipologia_punto_prelievo"]
    ];
    rr:predicateObjectMap [
      rr:predicate grel:p_array_a ;
      rr:objectMap  [ rml:reference "indirizzo_punto_prelievo"]
    ];
    rr:predicateObjectMap [
      rr:predicate grel:p_array_a ;
      rr:objectMap  [ rml:reference "comune_punto_prelievo"]
    ];
    rr:predicateObjectMap [
      rr:predicate grel:p_array_a ;
      rr:objectMap  [ rml:reference "provincia_punto_prelievo"]
    ];
    rr:predicateObjectMap [
      rr:predicate grel:p_array_a ;
      rr:objectMap  [ rml:reference "latitudine"]
    ];
    rr:predicateObjectMap [
      rr:predicate grel:p_array_a ;
      rr:objectMap  [ rml:reference "longitudine"]
    ];
    rr:predicateObjectMap [
      rr:predicate grel:p_array_a ;
      rr:objectMap  [ rml:reference "location"]
    ];
    rr:predicateObjectMap [
      rr:predicate grel:p_array_a ;
      rr:objectMap  [ rml:reference "id_campione"]
    ];
    rr:predicateObjectMap [
      rr:predicate grel:p_array_a ;
      rr:objectMap  [ rml:reference "macro_categoria_parametro"]
    ];
    rr:predicateObjectMap [
      rr:predicate grel:p_array_a ;
      rr:objectMap  [ rml:reference "categoria_parametro"]
    ];
    rr:predicateObjectMap [
      rr:predicate grel:p_array_a ;
      rr:objectMap  [ rml:reference "parametro"]
    ];
    rr:predicateObjectMap [
      rr:predicate grel:p_array_a ;
      rr:objectMap  [ rml:reference "tipo_parametro"]
    ];
    rr:predicateObjectMap [
      rr:predicate grel:p_array_a ;
      rr:objectMap  [ rml:reference "valore_testuale"]
    ];
    rr:predicateObjectMap [
      rr:predicate grel:p_array_a ;
      rr:objectMap  [ rml:reference "unita_di_misura_testuale"]
    ];
    rr:predicateObjectMap [
      rr:predicate grel:p_array_a ;
      rr:objectMap  [ rml:reference "esito"]
    ];
      rr:predicateObjectMap [
      rr:predicate grel:p_array_a ;
      rr:objectMap  [ rml:reference "data_referto"]
    ];
      rr:predicateObjectMap [
      rr:predicate grel:p_array_a ;
      rr:objectMap  [ rml:reference "anno_referto"]
    ];
      rr:predicateObjectMap [
      rr:predicate grel:p_array_a ;
      rr:objectMap  [ rml:reference "indirizzo_di_georeferenziazione"]
    ];
    rr:predicateObjectMap [
  rr:predicate grel:p_array_a ;
  rr:objectMap  [ rml:reference "segno"]
  ];
  rr:predicateObjectMap [
  rr:predicate grel:p_array_a ;
  rr:objectMap  [ rml:reference "valore_numerico"]
  ];
  rr:predicateObjectMap [
  rr:predicate grel:p_array_a ;
  rr:objectMap  [ rml:reference "unit_misura"]
  ];
  rr:predicateObjectMap [
  rr:predicate grel:p_array_a ;
  rr:objectMap  [ rml:reference "cas"]
  ];
    rr:predicateObjectMap [
      rr:predicate grel:p_string_sep ;
      rr:objectMap [ rr:constant "-" ]
    ];
  ].

  <#IsNotBiologicalParameter>
  fnml:functionValue [
      rr:predicateObjectMap [
          rr:predicate fno:executes ;
          rr:objectMap [ rr:constant idlab-fn:notEqual ]
      ] ;
      rr:predicateObjectMap [
          rr:predicate grel:valueParameter ;
         rr:objectMap [ rr:constant "Microbiologico" ]
      ] ;
      rr:predicateObjectMap [
          rr:predicate grel:valueParameter2 ;
          rr:objectMap [ rml:reference "macro_categoria_parametro" ]
     ]
  ] .

  <#IsChimico>
  fnml:functionValue [
      rr:predicateObjectMap [
          rr:predicate fno:executes ;
          rr:objectMap [ rr:constant idlab-fn:equal ]
      ] ;
      rr:predicateObjectMap [
          rr:predicate grel:valueParameter ;
         rr:objectMap [ rr:constant "Chimico" ]
      ] ;
      rr:predicateObjectMap [
          rr:predicate grel:valueParameter2 ;
          rr:objectMap [ rml:reference "macro_categoria_parametro" ]
     ]
  ] .
