@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .
@prefix rr: <http://www.w3.org/ns/r2rml#> .
@prefix rml: <http://semweb.mmlab.be/ns/rml#> .
@prefix ql: <http://semweb.mmlab.be/ns/ql#>.
@prefix fnml: <http://semweb.mmlab.be/ns/fnml#> .
@prefix grel: <http://users.ugent.be/~bjdmeest/function/grel.ttl#> .
@prefix fno: <https://w3id.org/function/ontology#> .
@prefix idlab-fn: <http://example.com/idlab/function/> .
@prefix sd: <http://www.w3.org/ns/sparql-service-description#> .
@prefix ispra-emf: <https://w3id.org/italia/env/onto/inspire-mf/>.
@prefix ispra-plc: <https://w3id.org/italia/env/onto/place/> .
@prefix ispra-top: <https://w3id.org/italia/env/onto/top/> .
@prefix hydro: <https://w3id.org/whow/onto/hydrography/>.
@prefix w-mon: <https://w3id.org/whow/onto/water-monitoring/>.
@prefix iotapit: <https://w3id.org/italia/onto/IoT/>.
@prefix l0: <https://w3id.org/italia/onto/l0/>.
@prefix tiapit: <https://w3id.org/italia/onto/TI/>.
@base <https://w3id.org/italia/lombardia/data/> .


# #LogicalSourceLakes
<#LogicalSourceLakes> a rml:BaseSource ;
    rml:source "d4ep-yvbw.csv" ;
    rml:referenceFormulation ql:CSV .

##Logical Source PROVINCE RDF
<#InputSPARQL>
    a sd:Service ;
    sd:endpoint <https://schema.gov.it/sparql> ;
    sd:supportedLanguage sd:SPARQL11Query ;
    sd:resultFormat <http://www.w3.org/ns/formats/SPARQL_Results_JSON> .

<#LogicalSourcePROVINCERDF> a rml:BaseSource ;
     rml:source <#InputSPARQL>;
     rml:referenceFormulation ql:JSONPath;
     rml:iterator "$.results.bindings[*]";
     rml:query """
     PREFIX skos: <http://www.w3.org/2004/02/skos/core#>
     PREFIX clv: <https://w3id.org/italia/onto/CLV/>

     SELECT ?s ?provincia ?ID
     WHERE { ?s a skos:Concept ;
          skos:inScheme <https://w3id.org/italia/controlled-vocabulary/territorial-classifications/provinces> ;
          skos:notation ?ID ;
          clv:acronym ?provincia .

     } """
.

##Logical Source CITY RDF
<#LogicalSourceCITYRDF> a rml:BaseSource ;
      rml:source <#InputSPARQL>;
      rml:referenceFormulation ql:JSONPath;
      rml:iterator "$.results.bindings[*]";
      rml:query """
      PREFIX skos: <http://www.w3.org/2004/02/skos/core#>
PREFIX clv: <https://w3id.org/italia/onto/CLV/>
PREFIX ti: <https://w3id.org/italia/onto/TI/>
SELECT ?s ?ID ?nome ?starttime ?endTime
WHERE { ?s a skos:Concept ;
        skos:inScheme <https://w3id.org/italia/controlled-vocabulary/territorial-classifications/cities> ;
        skos:notation ?ID ;
        skos:prefLabel ?nome ;
        clv:hasSOValidity/ti:endTime ?endTime ;
        clv:hasSOValidity/ti:startTime ?starttime ;
        clv:hasHigherRank <https://w3id.org/italia/controlled-vocabulary/territorial-classifications/regions/03> .
        FILTER (str(?endTime)="9999-12-31")

}
 """
      .


###########################################################
##                  MAPPING RULES
##########################################################

#### WATER HMP OBSERVATION MAPPING
<#WaterHMPObservationMapping> a rr:TriplesMap;
rml:logicalSource <#LogicalSourceLakes>;
 rr:subjectMap [
   fnml:functionValue [
     rr:predicateObjectMap [
       rr:predicate fno:executes ;
       rr:objectMap [ rr:constant idlab-fn:trueCondition ]
     ];
     rr:predicateObjectMap [
       rr:predicate idlab-fn:strBoolean ;
       rr:objectMap <#IsDepthParameter>
     ];
     rr:predicateObjectMap [
       rr:predicate idlab-fn:str ;
       rr:objectMap <#HydroMorphologicalObservationMapping>
     ]
   ] ;
   rr:class w-mon:WaterHydromorphologicalParameterObservation
] ;
rr:predicateObjectMap [
 rr:predicate rdfs:label ;
 rr:objectMap [ rr:template "Observation for the hydro-morphological parameter {parametro} with value {valore_testuale} for lake {lago} - {descrizione_profondit} - of the water basin {bacino_idrografico} for year {anno}" ; rr:language "en" ]
];
rr:predicateObjectMap [
 rr:predicate rdfs:label ;
 rr:objectMap [ rr:template "Osservazione del parametro idromorfologico {parametro} con valore {valore_testuale} per il lago {lago} - {descrizione_profondit} - del bacino idrografico {bacino_idrografico} fatta nell'anno {anno}" ; rr:language "it" ]
];
rr:predicateObjectMap [
 rr:predicate w-mon:hasObservationSample ;
 rr:objectMap <#URIHydroObservationSampleMapping>
];
rr:predicateObjectMap [
  rr:predicate w-mon:hasResult ;
  rr:objectMap <#URLifyHydroObservationResult>
];
rr:predicateObjectMap [
   rr:predicate w-mon:hasWaterObservableProperty ;
   rr:objectMap [ rr:template "https://w3id.org/italia/lombardia/data/observable-properties/{other}" ; rr:termType rr:IRI ]
] ;
rr:predicateObjectMap [
  rr:predicate tiapit:hasTemporalCoverage ;
  rr:objectMap [ rr:template "https://w3id.org/italia/lombardia/data/year/{anno}"; rr:termType rr:IRI ]
];
rr:predicateObjectMap [
  rr:predicate ispra-emf:generationTime ;
  rr:objectMap [ rr:template "https://w3id.org/italia/lombardia/data/temporal-entity/({data_campionamento})"; rr:termType rr:IRI ]
];
rr:predicateObjectMap [
   rr:predicate ispra-emf:hasFeatureOfInterest ;
   rr:objectMap <#URIWaterBodyMapping>
].

<#HydroMorphologicalObservationMapping>
rr:termType rr:IRI ;
fnml:functionValue [
 rr:predicateObjectMap [
   rr:predicate fno:executes ;
   rr:objectMap [ rr:constant grel:array_join ]
 ] ;
 rr:predicateObjectMap [
   rr:predicate grel:p_array_a ;
   rr:objectMap  [ rr:constant "https://w3id.org/italia/lombardia/data/water-observation"]
 ];
 rr:predicateObjectMap [
   rr:predicate grel:p_array_a ;
   rr:objectMap <#MD5forHydro>
 ];
 rr:predicateObjectMap [
   rr:predicate grel:p_string_sep ;
   rr:objectMap [ rr:constant "/" ]
 ];
].

<#IsDepthParameter>
fnml:functionValue [
    rr:predicateObjectMap [
        rr:predicate fno:executes ;
        rr:objectMap [ rr:constant idlab-fn:equal ];
    ] ;
    rr:predicateObjectMap [
        rr:predicate grel:valueParameter ;
        rr:objectMap [ rr:constant "CAM-PRF-0" ]
    ] ;
    rr:predicateObjectMap [
        rr:predicate grel:valueParameter2 ;
        rr:objectMap [ rml:reference "other" ]
    ]
] .


#######################################
# TEMPORAL ENTITY OBJECT DATE MAPPING
#######################################
<#TEDateMapping> a rr:TriplesMap ;
rml:logicalSource <#LogicalSourceLakes>;
rr:subjectMap [
  rr:template "https://w3id.org/italia/lombardia/data/temporal-entity/({data_campionamento})";
  rr:class ispra-top:TemporalEntity
] ;
rr:predicateObjectMap [
   rr:predicate rdfs:label ;
   rr:objectMap [ rr:template "Temporal Entity: {data_campionamento}" ; rr:language "en" ]
 ];
 rr:predicateObjectMap [
    rr:predicate rdfs:label ;
    rr:objectMap [ rr:template "Entit√† temporale: {data_campionamento}" ; rr:language "it" ]
 ];
 rr:predicateObjectMap [
    rr:predicate ispra-top:time ;
    rr:objectMap [ rml:reference "data_campionamento" ; rr:datatype xsd:date ]
 ].


########################################
## TEMPORAL ENTITY OBJECT YEAR MAPPING
########################################
<#TEYearMapping> a rr:TriplesMap ;
rml:logicalSource <#LogicalSourceLakes>;
rr:subjectMap [
  rr:template "https://w3id.org/italia/lombardia/data/year/{anno}";
  rr:class tiapit:Year
];
rr:predicateObjectMap [
   rr:predicate rdfs:label ;
   rr:objectMap [ rr:template "Year: {anno}" ; rr:language "en" ]
 ];
 rr:predicateObjectMap [
    rr:predicate rdfs:label ;
    rr:objectMap [ rr:template "Anno: {anno}" ; rr:language "it" ]
 ];
 rr:predicateObjectMap [
    rr:predicate tiapit:year ;
    rr:objectMap [ rml:reference "anno" ; rr:datatype xsd:gYear ]
 ];
 rr:predicateObjectMap [
    rr:predicate owl:sameAs ;
    rr:objectMap [ rr:template "https://dati.isprambiente.it/ld/common/year/{anno}" ; rr:termType rr:IRI ]
 ];
 rr:predicateObjectMap [
    rr:predicate owl:sameAs ;
    rr:objectMap [ rr:template "https://w3id.org/arco/resource/TimeInterval/{anno}" ; rr:termType rr:IRI ]
 ].


###############################
# WATER SAMPLE OBJECT MAPPING
###############################
<#HydroObservationSampleMapping> a rr:TriplesMap;
rml:logicalSource <#LogicalSourceLakes>;
  rr:subjectMap [
    fnml:functionValue [
      rr:predicateObjectMap [
        rr:predicate fno:executes ;
        rr:objectMap [ rr:constant idlab-fn:trueCondition ]
      ];
      rr:predicateObjectMap [
        rr:predicate idlab-fn:strBoolean ;
        rr:objectMap <#IsDepthParameter>
      ];
      rr:predicateObjectMap [
        rr:predicate idlab-fn:str ;
        rr:objectMap <#HydroObsSampleURIMapping>
      ]
    ] ;
    rr:class w-mon:WaterSample , w-mon:WaterFeature
 ];
 rr:predicateObjectMap [
    rr:predicate rdfs:label ;
    rr:objectMap [ rr:template "Water depth sampling description: {descrizione_profondit} - value: {profondit}" ; rr:language "en" ]
  ];
  rr:predicateObjectMap [
     rr:predicate rdfs:label ;
     rr:objectMap [ rr:template "Campione {descrizione_profondit} - valore: {profondit}" ; rr:language "it" ]
  ];
  rr:predicateObjectMap [
     rr:predicate w-mon:hasDepth ;
     rr:objectMap <#URIValueDepth>
  ];
  rr:predicateObjectMap [
    rr:predicate w-mon:isObtainedBy ;
    rr:objectMap [ rr:template "https://w3id.org/italia/lombardia/data/water-sampler/{codice_stazione}"; rr:termType rr:IRI ]
  ];
  rr:predicateObjectMap [
    rr:predicate w-mon:isSampleOf ;
    rr:objectMap <#URIWaterBodyMapping>
  ] .

<#HydroObsSampleURIMapping>
rr:termType rr:IRI ;
  fnml:functionValue [
     rr:predicateObjectMap [
       rr:predicate fno:executes ;
       rr:objectMap [ rr:constant grel:array_join ]
     ];
     rr:predicateObjectMap [
       rr:predicate grel:p_array_a ;
       rr:objectMap [ rr:constant "https://w3id.org/italia/lombardia/data/water-sample" ]
     ] ;
     rr:predicateObjectMap [
       rr:predicate grel:p_array_a ;
       rr:objectMap <#MD5URISample>
     ];
     rr:predicateObjectMap [
         rr:predicate grel:p_string_sep ;
         rr:objectMap [ rr:constant "/"]
     ]
  ].

<#URIValueDepth>
rr:termType rr:IRI;
fnml:functionValue [
 rr:predicateObjectMap [
   rr:predicate fno:executes ;
   rr:objectMap [ rr:constant grel:array_join ]
 ] ;
 rr:predicateObjectMap [
   rr:predicate grel:p_array_a ;
   rr:objectMap  [ rr:constant "https://w3id.org/italia/lombardia/data/value"]
 ];
 rr:predicateObjectMap [
   rr:predicate grel:p_array_a ;
   rr:objectMap  <#MD5DepthUM>
 ];
 rr:predicateObjectMap [
   rr:predicate grel:p_string_sep ;
   rr:objectMap [ rr:constant "/" ]
 ];
].

<#MD5DepthUM>
fnml:functionValue [
  rr:predicateObjectMap [
   rr:predicate fno:executes ;
   rr:objectMap [ rr:constant grel:string_md5 ]
  ];
  rr:predicateObjectMap [
   rr:predicate grel:valueParameter ;
   rr:objectMap <#ArrayJoinDUM>
  ];
].

<#ArrayJoinDUM>
fnml:functionValue [
 rr:predicateObjectMap [
   rr:predicate fno:executes ;
   rr:objectMap [ rr:constant grel:array_join ]
 ] ;
 rr:predicateObjectMap [
   rr:predicate grel:p_array_a ;
   rr:objectMap  [ rml:reference "profondit"]
 ];
 rr:predicateObjectMap [
   rr:predicate grel:p_array_a ;
   rr:objectMap  [ rr:constant "meter"]
 ];
 rr:predicateObjectMap [
   rr:predicate grel:p_string_sep ;
   rr:objectMap [ rr:constant "" ]
 ];
].


<#URIWaterBodyMapping>
rr:termType rr:IRI ;
fnml:functionValue [
 rr:predicateObjectMap [
   rr:predicate fno:executes ;
   rr:objectMap [ rr:constant grel:array_join ]
 ] ;
 rr:predicateObjectMap [
   rr:predicate grel:p_array_a ;
   rr:objectMap  [ rr:constant "https://w3id.org/italia/lombardia/data/lake-water-body"]
 ];
 rr:predicateObjectMap [
   rr:predicate grel:p_array_a ;
   rr:objectMap  <#Slugifylago>
 ];
 rr:predicateObjectMap [
   rr:predicate grel:p_string_sep ;
   rr:objectMap [ rr:constant "/" ]
 ];
].

# ##########################
# # DEPTH VALUE MAPPING
# ##########################
<#DepthMapping> a rr:TriplesMap;
rml:logicalSource <#LogicalSourceLakes>;
rr:subjectMap [
  fnml:functionValue [
    rr:predicateObjectMap [
      rr:predicate fno:executes ;
      rr:objectMap [ rr:constant idlab-fn:trueCondition ]
    ];
    rr:predicateObjectMap [
      rr:predicate idlab-fn:strBoolean ;
      rr:objectMap <#IsDepthParameter>
    ];
    rr:predicateObjectMap [
      rr:predicate idlab-fn:str ;
      rr:objectMap <#HydroDepthURIMapping>
    ]
  ] ;
  rr:class ispra-top:Value
] ;
rr:predicateObjectMap [
   rr:predicate rdfs:label ;
   rr:objectMap [ rr:template "Value {profondit} expressed in Meter" ; rr:language "en" ]
 ];
 rr:predicateObjectMap [
    rr:predicate rdfs:label ;
    rr:objectMap [ rr:template "Valore {profondit} espresso in Metri" ; rr:language "it" ]
 ];
 rr:predicateObjectMap [
    rr:predicate ispra-top:value ;
    rr:objectMap [ rml:reference "profondit" ]
 ];
 rr:predicateObjectMap [
    rr:predicate ispra-top:hasUnitOfMeasure ;
    rr:objectMap [ rr:constant "https://w3id.org/italia/lombardia/data/unit-of-measure/m" ; rr:termType rr:IRI ]
 ].

<#HydroDepthURIMapping>
rr:termType rr:IRI ;
 fnml:functionValue [
  rr:predicateObjectMap [
    rr:predicate fno:executes ;
    rr:objectMap [ rr:constant grel:array_join ]
  ] ;
  rr:predicateObjectMap [
    rr:predicate grel:p_array_a ;
    rr:objectMap  [ rr:constant "https://w3id.org/italia/lombardia/data/value"]
  ];
  rr:predicateObjectMap [
    rr:predicate grel:p_array_a ;
    rr:objectMap  <#MD5DepthUM>
  ];
  rr:predicateObjectMap [
    rr:predicate grel:p_string_sep ;
    rr:objectMap [ rr:constant "/" ]
  ]
 ].



# ##############
# ### OBSERVATION VALUE OBJECT MAPPING
# ##############
<#HydroObservationValueRangeMapping> a rr:TriplesMap;
rml:logicalSource <#LogicalSourceLakes>;
  rr:subjectMap [
    fnml:functionValue [
      rr:predicateObjectMap [
        rr:predicate fno:executes ;
        rr:objectMap [ rr:constant idlab-fn:trueCondition ]
      ];
      rr:predicateObjectMap [
        rr:predicate idlab-fn:strBoolean ;
        rr:objectMap <#IsDepthParameter>
      ];
      rr:predicateObjectMap [
        rr:predicate idlab-fn:str ;
        rr:objectMap <#HydroObsValueURIMapping>
      ]
    ] ;
    rr:class w-mon:ObservationValue
  ];
  rr:predicateObjectMap [
    rr:predicate rdfs:label ;
    rr:objectMap [ rr:template "Observation value {valore_testuale} {unita_di_misura}" ; rr:language "en" ]
  ];
  rr:predicateObjectMap [
    rr:predicate rdfs:label ;
    rr:objectMap [ rr:template "Valore dell'osservazione {valore_testuale} {unita_di_misura_testuale}" ; rr:language "it" ]
  ];
  rr:predicateObjectMap [
    rr:predicate ispra-top:value;
    rr:objectMap [ rml:reference "valore_numerico" ; rr:datatype xsd:float ]
  ];
  rr:predicateObjectMap [
    rr:predicate ispra-top:hasUnitOfMeasure;
    rr:objectMap <#URI4UnitOfMeasure>
    # rr:template "https://w3id.org/italia/lombardia/data/measurement-unit/{unita_di_misura_testuale}" ; rr:termType rr:IRI ]
  ].

<#URI4UnitOfMeasure>
rr:termType rr:IRI ;
fnml:functionValue [
   rr:predicateObjectMap [
     rr:predicate fno:executes ;
     rr:objectMap [ rr:constant grel:array_join ]
   ];
   rr:predicateObjectMap [
      rr:predicate grel:p_array_a ;
      rr:objectMap [ rr:constant "https://w3id.org/italia/lombardia/data/measurement-unit"]
   ] ;
   rr:predicateObjectMap [
      rr:predicate grel:p_array_a ;
      rr:objectMap <#SlygifyUnitOfMeasure>
   ] ;
   rr:predicateObjectMap [
      rr:predicate grel:p_string_sep ;
      rr:objectMap [ rr:constant "/" ]
   ]
].

#####################
# UNIT OF MEASURE
#####################
<UMMappingForHydro> a rr:TriplesMap;
rml:logicalSource <#LogicalSourceLakes>;
  rr:subjectMap [
    fnml:functionValue [
      rr:predicateObjectMap [
        rr:predicate fno:executes ;
        rr:objectMap [ rr:constant idlab-fn:trueCondition ]
      ];
      rr:predicateObjectMap [
        rr:predicate idlab-fn:strBoolean ;
        rr:objectMap <#IsDepthParameter>
      ];
      rr:predicateObjectMap [
        rr:predicate idlab-fn:str ;
        rr:objectMap <#URI4UnitOfMeasure>
      ]
    ] ;
    rr:class ispra-top:UnitOfMeasure
  ];
  rr:predicateObjectMap [
    rr:predicate rdfs:label ;
    rr:objectMap [ rr:template "Unit of measure {unita_di_misura}" ; rr:language "en" ]
  ];
  rr:predicateObjectMap [
    rr:predicate rdfs:label ;
    rr:objectMap [ rr:template "Unit√† di misura {unita_di_misura_testuale}" ; rr:language "it" ]
  ];
  rr:predicateObjectMap [
    rr:predicate ispra-top:name;
    rr:objectMap [ rml:reference "unita_di_misura_testuale" ; rr:language "it"]
  ];
  rr:predicateObjectMap [
    rr:predicate l0:name;
    rr:objectMap [ rml:reference "unita_di_misura_testuale" ; rr:language "it"]
  ].

<#HydroObsValueURIMapping>
rr:termType rr:IRI ;
  fnml:functionValue [
     rr:predicateObjectMap [
       rr:predicate fno:executes ;
       rr:objectMap [ rr:constant grel:array_join ]
     ];
     rr:predicateObjectMap [
        rr:predicate grel:p_array_a ;
        rr:objectMap [ rr:constant "https://w3id.org/italia/lombardia/data/observation-value"]
     ] ;
     rr:predicateObjectMap [
        rr:predicate grel:p_array_a ;
        rr:objectMap <#MD5UM>
     ] ;
     rr:predicateObjectMap [
        rr:predicate grel:p_string_sep ;
        rr:objectMap [ rr:constant "/" ]
     ]
  ].

# ###################
# ### WATER SAMPLER MAPPING
# ###################
<#WaterSamplerHydroMapping> a rr:TriplesMap;
rml:logicalSource <#LogicalSourceLakes>;
rr:subjectMap [
  fnml:functionValue [
    rr:predicateObjectMap [
      rr:predicate fno:executes ;
      rr:objectMap [ rr:constant idlab-fn:trueCondition ]
    ];
    rr:predicateObjectMap [
      rr:predicate idlab-fn:strBoolean ;
      rr:objectMap <#IsDepthParameter>
    ];
    rr:predicateObjectMap [
      rr:predicate idlab-fn:str ;
      rr:objectMap [ rr:template "https://w3id.org/italia/lombardia/data/water-sampler/{codice_stazione}" ; rr:termType rr:IRI ]
    ]
  ] ;
  rr:class w-mon:WaterSampler
];
 rr:predicateObjectMap [
  rr:predicate rdfs:label ;
  rr:objectMap [ rr:template "Water Sampler: Station {codice_stazione}" ; rr:language "en"]
];
 rr:predicateObjectMap [
  rr:predicate rdfs:label ;
  rr:objectMap [ rr:template "Stazione prelievo {codice_stazione}" ; rr:language "it"]
];
rr:predicateObjectMap [
 rr:predicate ispra-plc:hasGeometry ;
 rr:objectMap [ rr:template "https://w3id.org/italia/lombardia/data/geometry/{coord_y}-{coord_x}" ; rr:termType rr:IRI ]
];
rr:predicateObjectMap [
   rr:predicate ispra-plc:hasProvince ;
   rr:objectMap <#URIProvince>
] ;
 rr:predicateObjectMap [
    rr:predicate ispra-plc:hasMunicipality ;
    rr:objectMap [ rr:template "https://w3id.org/italia/lombardia/data/city/{codice_comune}" ; rr:termType rr:IRI ]
].

#############################################################################
# MANAGEMENT OF PLACES AND LINKING TO OTHER DATASETS
<#URIProvince>
rr:termType rr:IRI ;
fnml:functionValue [
 rr:predicateObjectMap [
   rr:predicate fno:executes ;
   rr:objectMap [ rr:constant grel:array_join ]
 ] ;
 rr:predicateObjectMap [
   rr:predicate grel:p_array_a ;
   rr:objectMap  [ rr:constant "https://w3id.org/italia/lombardia/data/province"]
 ];
 rr:predicateObjectMap [
   rr:predicate grel:p_array_a ;
   rr:objectMap <#substringCodiceComune>
 ];
 rr:predicateObjectMap [
   rr:predicate grel:p_string_sep ;
   rr:objectMap [ rr:constant "/" ]
 ];
].

<#substringCodiceComune>
fnml:functionValue [
 rr:predicateObjectMap [
   rr:predicate fno:executes ;
   rr:objectMap [ rr:constant grel:string_substring ]
 ] ;
 rr:predicateObjectMap [
   rr:predicate grel:valueParameter ;
   rr:objectMap  [ rml:reference "codice_comune"]
 ];
 rr:predicateObjectMap [
   rr:predicate grel:param_int_i_from ;
   rr:objectMap [ rr:constant "0"]
 ];
 rr:predicateObjectMap [
   rr:predicate grel:param_int_i_opt_to ;
   rr:objectMap [ rr:constant "3"]
 ];
].


#################################
# PROVINCE OBJ MAPPING
##################################
<#ProvinceObjMapping> a rr:TriplesMap ;
rml:logicalSource <#LogicalSourceLakes> ;
  rr:subjectMap [
    fnml:functionValue [
     rr:predicateObjectMap [
       rr:predicate fno:executes ;
       rr:objectMap [ rr:constant grel:array_join ]
     ] ;
     rr:predicateObjectMap [
       rr:predicate grel:p_array_a ;
       rr:objectMap  [ rr:constant "https://w3id.org/italia/lombardia/data/province"]
     ];
     rr:predicateObjectMap [
       rr:predicate grel:p_array_a ;
       rr:objectMap <#substringCodiceComune>
     ];
     rr:predicateObjectMap [
       rr:predicate grel:p_string_sep ;
       rr:objectMap [ rr:constant "/" ]
     ];
    ];
    rr:class ispra-plc:Province , ispra-plc:Feature , clv:Feature , ispra-top:Location
 ] ;

rr:predicateObjectMap [
  rr:predicate rdfs:label ;
  rr:objectMap [ rr:template "Province: {provincia}" ; rr:language "en" ]
];
rr:predicateObjectMap [
   rr:predicate rdfs:label ;
   rr:objectMap [ rr:template "Provincia {provincia}" ; rr:language "it" ]
];
rr:predicateObjectMap [
   rr:predicate ispra-top:name , l0:name ;
   rr:objectMap [ rml:reference "provincia" ; rr:language "it" ]
];
### SAME AS ARCO PROVINCE
rr:predicateObjectMap [
   rr:predicate owl:sameAs ;
   rr:objectMap <#URIProvinceMIC>
] ;
#### SAME AS FOR NATIONAL VOC
rr:predicateObjectMap [
  rr:predicate owl:sameAs ;
  rr:objectMap [
     rr:parentTriplesMap <#ProvinceMapping1> ;
     rr:joinCondition [
        rr:child "provincia";
        rr:parent "provincia.value" ;
     ] ;
   ] ;
 ].

<#URIProvinceMIC>
rr:termType rr:IRI ;
fnml:functionValue [
 rr:predicateObjectMap [
   rr:predicate fno:executes ;
   rr:objectMap [ rr:constant grel:array_join ]
 ];
 rr:predicateObjectMap [
   rr:predicate grel:p_array_a ;
   rr:objectMap [ rr:constant "https://w3id.org/arco/resource/Province" ]
 ] ;
 rr:predicateObjectMap [
   rr:predicate grel:p_array_a ;
   rr:objectMap <#lowercaseProv>
 ];
 rr:predicateObjectMap [
     rr:predicate grel:p_string_sep ;
     rr:objectMap [ rr:constant "/"]
 ]
].

<#lowercaseProv>
fnml:functionValue [
   rr:predicateObjectMap [
     rr:predicate fno:executes ;
     rr:objectMap [ rr:constant grel:toLowerCase ]
   ] ;
   rr:predicateObjectMap [
     rr:predicate grel:valueParameter ;
     rr:objectMap [ rml:reference "provincia" ]
  ]
] .


#################################
# COMUNE OBJ MAPPING
##################################
<#CityObjMapping> a rr:TriplesMap ;
rml:logicalSource <#LogicalSourceLakes> ;
  rr:subjectMap [
     rr:template "https://w3id.org/italia/lombardia/data/city/{codice_comune}";
     rr:class ispra-plc:Municipality , ispra-plc:Feature , clv:Feature , ispra-top:Location
  ] ;
  rr:predicateObjectMap [
     rr:predicate rdfs:label ;
     rr:objectMap [ rr:template "City: {comune}" ; rr:language "en" ]
   ];
   rr:predicateObjectMap [
      rr:predicate rdfs:label ;
      rr:objectMap [ rr:template "Citt√† {comune}" ; rr:language "it" ]
   ];
   rr:predicateObjectMap [
      rr:predicate ispra-top:name , l0:name ;
      rr:objectMap [ rml:reference "comune" ; rr:language "it" ]
   ];
   ### SAME AS FOR ISPRA
   rr:predicateObjectMap [
      rr:predicate owl:sameAs ;
      rr:objectMap [ rr:template "https://w3id.org/italia/env/ld/place/municipality/00201_{codice_comune}" ; rr:termType rr:IRI ]
   ];
   ### SAME AS ARCO CITY
   rr:predicateObjectMap [
      rr:predicate owl:sameAs ;
      rr:objectMap <#URICityMIC>
   ];
   #### SAME AS FOR NATIONAL VOC
   rr:predicateObjectMap [
     rr:predicateObjectMap [
        rr:predicate owl:sameAs ;
        rr:objectMap [
          rr:parentTriplesMap <#CityMapping1> ;
          rr:joinCondition [
             rr:child "comune";
             rr:parent "nome.value" ;
          ] ;
        ]
      ]
    ] .

<#URICityMIC>
rr:termType rr:IRI ;
fnml:functionValue [
 rr:predicateObjectMap [
   rr:predicate fno:executes ;
   rr:objectMap [ rr:constant grel:array_join ]
 ];
 rr:predicateObjectMap [
   rr:predicate grel:p_array_a ;
   rr:objectMap [ rr:constant "https://w3id.org/arco/resource/City" ]
 ] ;
 rr:predicateObjectMap [
   rr:predicate grel:p_array_a ;
   rr:objectMap <#slugifyCity>
 ];
 rr:predicateObjectMap [
     rr:predicate grel:p_string_sep ;
     rr:objectMap [ rr:constant "/"]
 ]
].

<#slugifyCity>
fnml:functionValue [
  rr:predicateObjectMap [
    rr:predicate fno:executes ;
    rr:objectMap [ rr:constant idlab-fn:slugify ]
  ];
  rr:predicateObjectMap [
    rr:predicate idlab-fn:str ;
    rr:objectMap [ rml:reference "comune"]
  ] ;
] .


##############################
## CITY LINKING
##############################

<#CityMapping1> a rr:TriplesMap ;
rml:logicalSource <#LogicalSourceCITYRDF> ;
rr:subjectMap [
  rr:template "https://w3id.org/italia/controlled-vocabulary/territorial-classifications/cities/{ID.value}-({starttime.value})" ;  rr:termType rr:IRI ;
].

##############################
## PROVINCE LINKING
##############################

<#ProvinceMapping1> a rr:TriplesMap ;
rml:logicalSource <#LogicalSourcePROVINCERDF> ;
rr:subjectMap [
  rr:template "https://w3id.org/italia/controlled-vocabulary/territorial-classifications/provinces/{ID.value}" ;  rr:termType rr:IRI ;
].
###################################################################################


# ####################
# ## GEOMETRY MAPPING OBJECT MAPPING
# #####################
<#Geometry> a rr:TriplesMap ;
rml:logicalSource <#LogicalSourceLakes> ;
rr:subjectMap [
 fnml:functionValue [
    rr:predicateObjectMap [
      rr:predicate fno:executes ;
      rr:objectMap [ rr:constant idlab-fn:trueCondition ]
    ];
    rr:predicateObjectMap [
      rr:predicate idlab-fn:strBoolean ;
      rr:objectMap <#IsDepthParameter>
    ];
    rr:predicateObjectMap [
      rr:predicate idlab-fn:str ;
      rr:objectMap [ rr:template "https://w3id.org/italia/lombardia/data/geometry/{coord_y}-{coord_x}"; rr:termType rr:IRI ]
    ]
  ] ;
  rr:class ispra-plc:Geometry
] ;
rr:predicateObjectMap [
  rr:predicate rdfs:label;
  rr:objectMap [ rr:template "Geometria {coord_y}-{coord_x}" ; rr:language "it" ]
] ;
rr:predicateObjectMap [
  rr:predicate rdfs:label;
  rr:objectMap [ rr:template "Geometry {coord_y}-{coord_x}" ; rr:language "en" ]
] ;
rr:predicateObjectMap [
  rr:predicate ispra-top:isClassifiedBy;
  rr:objectMap [ rr:constant "https://w3id.org/italia/lombardia/data/geometry-type/point"; rr:termType rr:IRI ]
] ;
rr:predicateObjectMap [
  rr:predicate ispra-plc:lat;
  rr:objectMap [ rml:reference "coord_y" ]
] ;
rr:predicateObjectMap [
  rr:predicate ispra-plc:long;
  rr:objectMap [ rml:reference "coord_x" ]
] .


# ########################################
# ## GEOMETRY TYPE MAPPING OBJECT MAPPING
# ########################################
<#GeometryType> a rr:TriplesMap ;
rml:logicalSource <#LogicalSourceLakes> ;
rr:subjectMap [
  fnml:functionValue [
     rr:predicateObjectMap [
       rr:predicate fno:executes ;
       rr:objectMap [ rr:constant idlab-fn:trueCondition ]
     ];
     rr:predicateObjectMap [
       rr:predicate idlab-fn:strBoolean ;
       rr:objectMap <#IsDepthParameter>
     ];
     rr:predicateObjectMap [
       rr:predicate idlab-fn:str ;
       rr:objectMap [ rr:constant "https://w3id.org/italia/lombardia/data/geometry-type/point"; rr:termType rr:IRI ]
     ]
  ] ;
  rr:class ispra-plc:GeometryType
] ;
rr:predicateObjectMap [
  rr:predicate rdfs:label;
  rr:objectMap [ rr:constant "Geometry Type: Point" ; rr:language "en" ]
] ;
rr:predicateObjectMap [
  rr:predicate rdfs:label;
  rr:objectMap [ rr:constant "Tipo di Geometria: Punto" ; rr:language "it" ]
] ;
rr:predicateObjectMap [
  rr:predicate ispra-top:name;
  rr:objectMap [ rr:constant "Punto" ; rr:language "it" ]
] ;
rr:predicateObjectMap [
  rr:predicate ispra-top:name;
  rr:objectMap [ rr:constant "Point" ; rr:language "en" ]
] .


# # # ## 5. Mapping observation sample URIHydroObservationSampleMapping
<#URIHydroObservationSampleMapping>
rr:termType rr:IRI ;
fnml:functionValue [
 rr:predicateObjectMap [
   rr:predicate fno:executes ;
   rr:objectMap [ rr:constant grel:array_join ]
 ];
 rr:predicateObjectMap [
   rr:predicate grel:p_array_a ;
   rr:objectMap [ rr:constant "https://w3id.org/italia/lombardia/data/water-sample" ]
 ] ;
 rr:predicateObjectMap [
   rr:predicate grel:p_array_a ;
   rr:objectMap <#MD5URISample>
 ];
 rr:predicateObjectMap [
     rr:predicate grel:p_string_sep ;
     rr:objectMap [ rr:constant "/"]
 ]
].

 <#MD5URISample>
fnml:functionValue [
  rr:predicateObjectMap [
   rr:predicate fno:executes ;
   rr:objectMap [ rr:constant grel:string_md5 ]
  ];
  rr:predicateObjectMap [
   rr:predicate grel:valueParameter ;
   rr:objectMap <#ArrayJoinDescDepth>
  ];
].

<#ArrayJoinDescDepth>
fnml:functionValue [
 rr:predicateObjectMap [
   rr:predicate fno:executes ;
   rr:objectMap [ rr:constant grel:array_join ]
 ];
 rr:predicateObjectMap [
   rr:predicate grel:p_array_a ;
   rr:objectMap [ rml:reference "profondit" ]
 ] ;
 rr:predicateObjectMap [
   rr:predicate grel:p_array_a ;
   rr:objectMap [ rml:reference "descrizione_profondit"]
 ];
 rr:predicateObjectMap [
     rr:predicate grel:p_string_sep ;
     rr:objectMap [ rr:constant ""]
 ]
].

# # ##### URI of Observation Value Mapping
<#URLifyHydroObservationResult>
rr:termType rr:IRI ;
fnml:functionValue [
 rr:predicateObjectMap [
   rr:predicate fno:executes ;
   rr:objectMap [ rr:constant grel:array_join ]
 ];

  rr:predicateObjectMap [
    rr:predicate grel:p_array_a ;
    rr:objectMap [ rr:constant "https://w3id.org/italia/lombardia/data/observation-value"]
  ] ;
  rr:predicateObjectMap [
    rr:predicate grel:p_array_a ;
    rr:objectMap <#MD5UM>
  ] ;
  rr:predicateObjectMap [
    rr:predicate grel:p_string_sep ;
    rr:objectMap [ rr:constant "/" ]
  ]
] .

<#MD5UM>
fnml:functionValue [
  rr:predicateObjectMap [
   rr:predicate fno:executes ;
   rr:objectMap [ rr:constant grel:string_md5 ]
  ];
  rr:predicateObjectMap [
   rr:predicate grel:valueParameter ;
   rr:objectMap <#UnionUM>
  ];
].

<#UnionUM>
fnml:functionValue [
 rr:predicateObjectMap [
   rr:predicate fno:executes ;
   rr:objectMap [ rr:constant grel:array_join ]
 ];
  rr:predicateObjectMap [
    rr:predicate grel:p_array_a ;
    rr:objectMap [ rml:reference "valore_testuale"]
  ] ;
  rr:predicateObjectMap [
    rr:predicate grel:p_array_a ;
    rr:objectMap [ rml:reference "unita_di_misura_testuale"]
  ] ;
  rr:predicateObjectMap [
    rr:predicate grel:p_string_sep ;
    rr:objectMap [ rr:constant "" ]
  ]
] .

#
# ## MD5 for hydro
<#MD5forHydro>
fnml:functionValue [
  rr:predicateObjectMap [
   rr:predicate fno:executes ;
   rr:objectMap [ rr:constant grel:string_md5 ]
  ];
  rr:predicateObjectMap [
   rr:predicate grel:valueParameter ;
   rr:objectMap <#ArrayJoin>
  ];
].


# ### Array join intera riga
<#ArrayJoin>
fnml:functionValue [
  rr:predicateObjectMap [
    rr:predicate fno:executes ;
    rr:objectMap [ rr:constant grel:array_join ]
  ] ;
  rr:predicateObjectMap [
    rr:predicate grel:p_array_a ;
    rr:objectMap  [ rr:template "{bacino_idrografico}"]
  ];
  rr:predicateObjectMap [
    rr:predicate grel:p_array_a ;
    rr:objectMap  [ rr:template "{lago}"]
  ];
  rr:predicateObjectMap [
    rr:predicate grel:p_array_a ;
    rr:objectMap  [ rr:template "{corpo_idrico}"]
  ];
  rr:predicateObjectMap [
    rr:predicate grel:p_array_a ;
    rr:objectMap  [ rr:template "{provincia}"]
  ];
  rr:predicateObjectMap [
    rr:predicate grel:p_array_a ;
    rr:objectMap  [ rr:template "{comune}"]
  ];
  rr:predicateObjectMap [
    rr:predicate grel:p_array_a ;
    rr:objectMap  [ rr:template "{coord_x}"]
  ];
  rr:predicateObjectMap [
    rr:predicate grel:p_array_a ;
    rr:objectMap  [ rr:template "{coord_y}"]
  ];
  rr:predicateObjectMap [
    rr:predicate grel:p_array_a ;
    rr:objectMap  [ rr:template "{codice_stazione}"]
  ];
  rr:predicateObjectMap [
    rr:predicate grel:p_array_a ;
    rr:objectMap  [ rr:template "{data_campionamento}"]
  ];
  rr:predicateObjectMap [
    rr:predicate grel:p_array_a ;
    rr:objectMap  [ rr:template "{parametro}"]
  ];
  rr:predicateObjectMap [
    rr:predicate grel:p_array_a ;
    rr:objectMap  [ rr:template "{valore_numerico}"]
  ];
  rr:predicateObjectMap [
    rr:predicate grel:p_array_a ;
    rr:objectMap  [ rr:template "{valore_testuale}"]
  ];
  rr:predicateObjectMap [
    rr:predicate grel:p_array_a ;
    rr:objectMap  [ rr:template "{cas}"]
  ];
  rr:predicateObjectMap [
    rr:predicate grel:p_array_a ;
    rr:objectMap  [ rr:template "{wise}"]
  ];
  rr:predicateObjectMap [
    rr:predicate grel:p_array_a ;
    rr:objectMap  [ rr:template "{other}"]
  ];
  rr:predicateObjectMap [
    rr:predicate grel:p_array_a ;
    rr:objectMap  [ rr:template "{profondit}"]
  ];
  rr:predicateObjectMap [
    rr:predicate grel:p_array_a ;
    rr:objectMap  [ rr:template "{descrizione_profondit}"]
  ];
  rr:predicateObjectMap [
    rr:predicate grel:p_array_a ;
    rr:objectMap  [ rr:template "{unita_di_misura_testuale}"]
  ];
  rr:predicateObjectMap [
    rr:predicate grel:p_array_a ;
    rr:objectMap  [ rr:template "{unita_di_misura}"]
  ];
  rr:predicateObjectMap [
    rr:predicate grel:p_array_a ;
    rr:objectMap  [ rr:template "{formula_parametro}"]
  ];
  rr:predicateObjectMap [
    rr:predicate grel:p_array_a ;
    rr:objectMap  [ rr:template "{anno}"]
  ];
  rr:predicateObjectMap [
    rr:predicate grel:p_string_sep ;
    rr:objectMap [ rr:constant "/" ]
  ];
].

<#MD5Test>
fnml:functionValue [
  rr:predicateObjectMap [
   rr:predicate fno:executes ;
   rr:objectMap [ rr:constant grel:string_md5 ]
  ];
  rr:predicateObjectMap [
   rr:predicate grel:valueParameter ;
   rr:objectMap <#ArrayJoinTest>
  ];
].

<#ArrayJoinTest>
fnml:functionValue [
  rr:predicateObjectMap [
    rr:predicate fno:executes ;
    rr:objectMap [ rr:constant grel:array_join ]
  ] ;
  rr:predicateObjectMap [
    rr:predicate grel:p_array_a ;
    rr:objectMap  [ rr:template "{bacino_idrografico}"]
  ];
  rr:predicateObjectMap [
    rr:predicate grel:p_array_a ;
    rr:objectMap  [ rr:template "{lago}"]
  ];
  rr:predicateObjectMap [
    rr:predicate grel:p_array_a ;
    rr:objectMap  [ rr:template "{corpo_idrico}"]
  ];
  rr:predicateObjectMap [
    rr:predicate grel:p_array_a ;
    rr:objectMap  [ rr:template "{provincia}"]
  ];
  rr:predicateObjectMap [
    rr:predicate grel:p_array_a ;
    rr:objectMap  [ rr:template "{comune}"]
  ];
  rr:predicateObjectMap [
    rr:predicate grel:p_string_sep ;
    rr:objectMap [ rr:constant "/" ]
  ];
] .


<#Slugifylago>
fnml:functionValue [
	rr:predicateObjectMap [
		rr:predicate fno:executes ;
		rr:objectMap [ rr:constant idlab-fn:slugify ]
	];
  rr:predicateObjectMap [
    rr:predicate idlab-fn:str ;
    rr:objectMap [ rml:reference "lago"]
  ] ;
 ] .

<#SlygifyUnitOfMeasure>
fnml:functionValue [
	rr:predicateObjectMap [
		rr:predicate fno:executes ;
		rr:objectMap [ rr:constant idlab-fn:slugify ]
	];
  rr:predicateObjectMap [
    rr:predicate idlab-fn:str ;
    rr:objectMap [ rml:reference "unita_di_misura"]
  ] ;
 ] .
