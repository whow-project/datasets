@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .
@prefix rr: <http://www.w3.org/ns/r2rml#> .
@prefix rml: <http://semweb.mmlab.be/ns/rml#> .
@prefix ql: <http://semweb.mmlab.be/ns/ql#>.
@prefix fnml: <http://semweb.mmlab.be/ns/fnml#> .
@prefix grel: <http://users.ugent.be/~bjdmeest/function/grel.ttl#> .
@prefix fno: <https://w3id.org/function/ontology#> .
@prefix idlab-fn: <http://example.com/idlab/function/> .
@prefix sd: <http://www.w3.org/ns/sparql-service-description#> .
@prefix ispra-emf: <https://w3id.org/italia/env/onto/inspire-mf/>.
@prefix ispra-plc: <https://w3id.org/italia/env/onto/place/> .
@prefix ispra-top: <https://w3id.org/italia/env/onto/top/> .
@prefix hydro: <https://w3id.org/whow/onto/hydrography/>.
@prefix w-mon: <https://w3id.org/whow/onto/water-monitoring/>.
@prefix iotapit: <https://w3id.org/italia/onto/IoT/>.
@prefix l0: <https://w3id.org/italia/onto/l0/>.
@prefix tiapit: <https://w3id.org/italia/onto/TI/>.
@prefix sosa: <http://www.w3.org/ns/sosa/> .
@base <https://w3id.org/italia/lombardia/data/> .


# #LogicalSourceLakes
<#LogicalSourceLakesHeight> a rml:BaseSource ;
    rml:source "Altezza_laghi.csv" ;
    rml:referenceFormulation ql:CSV .

##SPARQL ENDPOINT RDF
<#InputSPARQL>
    a sd:Service ;
    sd:endpoint <https://schema.gov.it/sparql> ;
    sd:supportedLanguage sd:SPARQL11Query ;
    sd:resultFormat <http://www.w3.org/ns/formats/SPARQL_Results_JSON> .

##Logical Source CITY RDF
<#LogicalSourceCITYRDF> a rml:BaseSource ;
      rml:source <#InputSPARQL>;
      rml:referenceFormulation ql:JSONPath;
      rml:iterator "$.results.bindings[*]";
      rml:query """
      PREFIX skos: <http://www.w3.org/2004/02/skos/core#>
PREFIX clv: <https://w3id.org/italia/onto/CLV/>
PREFIX ti: <https://w3id.org/italia/onto/TI/>
SELECT ?s ?ID ?nome ?starttime ?endTime
WHERE { ?s a skos:Concept ;
        skos:inScheme <https://w3id.org/italia/controlled-vocabulary/territorial-classifications/cities> ;
        skos:notation ?ID ;
        skos:prefLabel ?nome ;
        clv:hasSOValidity/ti:endTime ?endTime ;
        clv:hasSOValidity/ti:startTime ?starttime ;
        clv:hasHigherRank <https://w3id.org/italia/controlled-vocabulary/territorial-classifications/regions/03> .
        FILTER (str(?endTime)="9999-12-31")
}
 """
      .


###########################################################
##                  MAPPING RULES
##########################################################

#### LAKES HEIGHT OBSERVATION MAPPING
<#WaterHeightHMObservationMapping> a rr:TriplesMap;
rml:logicalSource <#LogicalSourceLakesHeight>;
 rr:subjectMap [
 rr:termType rr:IRI ;
   fnml:functionValue [
    rr:predicateObjectMap [
      rr:predicate fno:executes ;
      rr:objectMap [ rr:constant grel:array_join ]
    ] ;
    rr:predicateObjectMap [
      rr:predicate grel:p_array_a ;
      rr:objectMap  [ rr:constant "https://w3id.org/italia/lombardia/data/water-observation"]
    ];
    rr:predicateObjectMap [
      rr:predicate grel:p_array_a ;
      rr:objectMap <#MD5forHeight>
    ];
    rr:predicateObjectMap [
      rr:predicate grel:p_string_sep ;
      rr:objectMap [ rr:constant "/" ]
    ];
   ];
   rr:class w-mon:WaterHydroMorphologicalObservation
] ;
rr:predicateObjectMap [
 rr:predicate rdfs:label ;
 rr:objectMap [ rr:template "Observation for the hydro-morphological parameter Hydrometric height with value {altezza} {unit_di_misura_altezza} for lake {lago} done at {periodo}" ; rr:language "en" ]
];
rr:predicateObjectMap [
 rr:predicate rdfs:label ;
 rr:objectMap [ rr:template "Osservazione del parametro idromorfologico altezza idrometrica con valore {altezza} {unit_di_misura_altezza} per il lago {lago} fatta il {periodo}" ; rr:language "it" ]
];
rr:predicateObjectMap [
 rr:predicate w-mon:hasObservationSample ;
 rr:objectMap <#URISampleMapping>
];
rr:predicateObjectMap [
  rr:predicate w-mon:hasResult ;
  rr:objectMap <#URLHeightObservationResult>
];
rr:predicateObjectMap [
   rr:predicate w-mon:hasWaterObservableProperty ;
   rr:objectMap [ rr:constant "https://w3id.org/italia/lombardia/data/observable-properties/LT-00-0" ; rr:termType rr:IRI ]
] ;
rr:predicateObjectMap [
  rr:predicate ispra-emf:generationTime ;
  rr:objectMap [ rr:template "https://w3id.org/italia/lombardia/data/year/{anno}"; rr:termType rr:IRI ]
];
rr:predicateObjectMap [
  rr:predicate tiapit:date ;
  rr:objectMap <#dateMapping>
];
rr:predicateObjectMap [
   rr:predicate ispra-emf:hasFeatureOfInterest ;
   rr:objectMap <#WaterBodyMapping>
].


##################
## DATE Mapping
##################
<#dateMapping>
rr:datatype xsd:dateTime ;
fnml:functionValue [
  	rr:predicateObjectMap [
  		rr:predicate fno:executes ;
  		rr:objectMap [ rr:constant idlab-fn:normalizeDateTime ]
  	];
    rr:predicateObjectMap [
      rr:predicate idlab-fn:strDate ;
      rr:objectMap [ rml:reference "periodo" ]
    ];
    rr:predicateObjectMap [
      rr:predicate idlab-fn:pattern ;
      rr:objectMap [ rr:constant "MM/dd/yyyy hh:mm:ss a" ]
    ];
] .


# # #############
# # ## TEMPORAL ENTITY OBJECT YEAR MAPPING
# # #############
<#TEYearForHeightMapping> a rr:TriplesMap ;
rml:logicalSource <#LogicalSourceLakesHeight>;
rr:subjectMap [
  rr:template "https://w3id.org/italia/lombardia/data/year/{anno}";
  rr:class ispra-top:Year
];
rr:predicateObjectMap [
   rr:predicate rdfs:label ;
   rr:objectMap [ rr:template "Year: {anno}" ; rr:language "en" ]
 ];
 rr:predicateObjectMap [
    rr:predicate rdfs:label ;
    rr:objectMap [ rr:template "Anno: {anno}" ; rr:language "it" ]
 ];
 rr:predicateObjectMap [
    rr:predicate ispra-top:year ;
    rr:objectMap [ rml:reference "anno" ; rr:datatype xsd:gYear ]
 ].


# #################
# ### WATER SAMPLE OBJECT MAPPING
# #################
<#ObsSampleMapping> a rr:TriplesMap;
rml:logicalSource <#LogicalSourceLakesHeight> ;
  rr:subjectMap [
    fnml:functionValue [
       rr:predicateObjectMap [
         rr:predicate fno:executes ;
         rr:objectMap [ rr:constant grel:controls_if ]
       ];
       rr:predicateObjectMap [
         rr:predicate grel:bool_b ;
         rr:objectMap <#IsPuntoNull>
       ];
       rr:predicateObjectMap [
         rr:predicate grel:any_false ;
         rr:objectMap <#URIPuntoNotNullMapping>
       ]
     ] ;
    rr:class w-mon:WaterSample
 ];
 rr:predicateObjectMap [
    rr:predicate rdfs:label ;
    rr:objectMap [ rr:template "Water sample taken at: {punto}" ; rr:language "en" ]
  ];
  rr:predicateObjectMap [
     rr:predicate rdfs:label ;
     rr:objectMap [ rr:template "Campione prelevato a {punto}" ; rr:language "it" ]
  ];
  rr:predicateObjectMap [
     rr:predicateObjectMap [
        rr:predicate w-mon:isTakenAt ;
        rr:objectMap [
           rr:parentTriplesMap <#PointMapping> ;
           rr:joinCondition [
              rr:child "punto";
              rr:parent "nome.value" ;
           ] ;
        ];
    ]
  ].

<#IsPuntoNull>
fnml:functionValue [
  rr:predicateObjectMap [
    rr:predicate fno:executes ;
    rr:objectMap [ rr:constant idlab-fn:isNull ]
  ];
  rr:predicateObjectMap [
    rr:predicate idlab-fn:str ;
    rr:objectMap [ rml:reference "punto" ]
  ]
] .

<#URIPuntoNotNullMapping>
rr:termType rr:IRI ;
  fnml:functionValue [
     rr:predicateObjectMap [
       rr:predicate fno:executes ;
       rr:objectMap [ rr:constant grel:array_join ]
     ];
     rr:predicateObjectMap [
       rr:predicate grel:p_array_a ;
       rr:objectMap [ rr:constant "https://w3id.org/italia/lombardia/data/water-sample" ]
     ] ;
     rr:predicateObjectMap [
       rr:predicate grel:p_array_a ;
       rr:objectMap <#MD5Sample>
     ];
     rr:predicateObjectMap [
         rr:predicate grel:p_string_sep ;
         rr:objectMap [ rr:constant "/"]
     ]
  ].

#########################
# WATER BODY URI MAPPING
#########################
<#WaterBodyMapping>
rr:termType rr:IRI ;
 fnml:functionValue [
    rr:predicateObjectMap [
      rr:predicate fno:executes ;
      rr:objectMap [ rr:constant grel:controls_if ]
    ];
    rr:predicateObjectMap [
      rr:predicate grel:bool_b ;
      rr:objectMap <#LagoMaggioreMapping>
    ];
    rr:predicateObjectMap [
      rr:predicate grel:any_true ;
      rr:objectMap <#URILagoMMapping>
    ];
    rr:predicateObjectMap [
      rr:predicate grel:any_false ;
      rr:objectMap <#WaterBodyAltriMapping>
    ]
  ] .


<#LagoMaggioreMapping>
fnml:functionValue [
    rr:predicateObjectMap [
        rr:predicate fno:executes ;
        rr:objectMap [ rr:constant idlab-fn:equal ];
    ] ;
    rr:predicateObjectMap [
        rr:predicate grel:valueParameter ;
        rr:objectMap [ rr:constant "LAGO MAGGIORE" ]
    ] ;
    rr:predicateObjectMap [
        rr:predicate grel:valueParameter2 ;
        rr:objectMap [ rml:reference "lago" ]
    ]
] .

<#URILagoMMapping>
rr:termType rr:IRI ;
fnml:functionValue [
 rr:predicateObjectMap [
   rr:predicate fno:executes ;
   rr:objectMap [ rr:constant grel:array_join ]
 ] ;
 rr:predicateObjectMap [
   rr:predicate grel:p_array_a ;
   rr:objectMap  [ rr:constant "https://w3id.org/italia/lombardia/data/lake-water-body"]
 ];
 rr:predicateObjectMap [
   rr:predicate grel:p_array_a ;
   rr:objectMap  <#SlugifylagoMaggiore>
 ];
 rr:predicateObjectMap [
   rr:predicate grel:p_string_sep ;
   rr:objectMap [ rr:constant "/" ]
 ];
].

<#WaterBodyAltriMapping>
rr:termType rr:IRI ;
 fnml:functionValue [
    rr:predicateObjectMap [
      rr:predicate fno:executes ;
      rr:objectMap [ rr:constant grel:controls_if ]
    ];
    rr:predicateObjectMap [
      rr:predicate grel:bool_b ;
      rr:objectMap <#IncludeDiMapping>
    ];
    rr:predicateObjectMap [
      rr:predicate grel:any_true ;
      rr:objectMap <#URILago1>
    ];
    rr:predicateObjectMap [
      rr:predicate grel:any_false ;
      rr:objectMap <#URILago2>
    ]
  ] .

<#IncludeDiMapping>
fnml:functionValue [
  rr:predicateObjectMap [
    rr:predicate fno:executes ;
    rr:objectMap [ rr:constant grel:string_contains ]
  ];
  rr:predicateObjectMap [
    rr:predicate grel:valueParameter ;
    rr:objectMap [ rml:reference "lago"]
  ];
  rr:predicateObjectMap [
    rr:predicate grel:string_sub ;
    rr:objectMap [ rr:constant "DI" ]
  ]
] .

<#URILago1>
rr:termType rr:IRI ;
fnml:functionValue [
 rr:predicateObjectMap [
   rr:predicate fno:executes ;
   rr:objectMap [ rr:constant grel:array_join ]
 ] ;
 rr:predicateObjectMap [
   rr:predicate grel:p_array_a ;
   rr:objectMap  [ rr:constant "https://w3id.org/italia/lombardia/data/lake-water-body"]
 ];
 rr:predicateObjectMap [
   rr:predicate grel:p_array_a ;
   rr:objectMap  <#SlugifylagoWithDI>
 ];
 rr:predicateObjectMap [
   rr:predicate grel:p_string_sep ;
   rr:objectMap [ rr:constant "/" ]
 ];
].

<#URILago2>
rr:termType rr:IRI ;
fnml:functionValue [
 rr:predicateObjectMap [
   rr:predicate fno:executes ;
   rr:objectMap [ rr:constant grel:array_join ]
 ] ;
 rr:predicateObjectMap [
   rr:predicate grel:p_array_a ;
   rr:objectMap  [ rr:constant "https://w3id.org/italia/lombardia/data/lake-water-body"]
 ];
 rr:predicateObjectMap [
   rr:predicate grel:p_array_a ;
   rr:objectMap  <#SlugifylagoWithD>
 ];
 rr:predicateObjectMap [
   rr:predicate grel:p_string_sep ;
   rr:objectMap [ rr:constant "/" ]
 ];
].


# ##############
# ### OBSERVATION VALUE OBJECT MAPPING
# ##############
<#ObservationValueHeightMapping> a rr:TriplesMap;
rml:logicalSource <#LogicalSourceLakesHeight> ;
  rr:subjectMap [
    fnml:functionValue [
       rr:predicateObjectMap [
         rr:predicate fno:executes ;
         rr:objectMap [ rr:constant grel:array_join ]
       ];
       rr:predicateObjectMap [
          rr:predicate grel:p_array_a ;
          rr:objectMap [ rr:constant "https://w3id.org/italia/lombardia/data/observation-value"]
       ] ;
       rr:predicateObjectMap [
          rr:predicate grel:p_array_a ;
          rr:objectMap <#MD5HeightUM>
       ] ;
       rr:predicateObjectMap [
          rr:predicate grel:p_string_sep ;
          rr:objectMap [ rr:constant "/" ]
       ]
    ];
    rr:class w-mon:ObservationValue
  ];
  rr:predicateObjectMap [
    rr:predicate rdfs:label ;
    rr:objectMap [ rr:template "Observation value {altezza} {unit_di_misura_altezza}" ; rr:language "en" ]
  ];
  rr:predicateObjectMap [
    rr:predicate rdfs:label ;
    rr:objectMap [ rr:template "Valore dell'osservazione {altezza} {unit_di_misura_testuale_punto}" ; rr:language "it" ]
  ];
  rr:predicateObjectMap [
    rr:predicate ispra-top:value;
    rr:objectMap [ rml:reference "altezza" ; rr:datatype xsd:float ]
  ];
  rr:predicateObjectMap [
    rr:predicate ispra-top:hasUnitOfMeasure;
    rr:objectMap <#URIUMPunto>
  ].

################################
# URI MEASUREMENT UNIT MAPPING
################################
<#URIUMPunto>
rr:termType rr:IRI ;
fnml:functionValue [
   rr:predicateObjectMap [
     rr:predicate fno:executes ;
     rr:objectMap [ rr:constant grel:array_join ]
   ];
   rr:predicateObjectMap [
      rr:predicate grel:p_array_a ;
      rr:objectMap [ rr:constant "https://w3id.org/italia/lombardia/data/measurement-unit"]
   ] ;
   rr:predicateObjectMap [
      rr:predicate grel:p_array_a ;
      rr:objectMap <#SlugifyUMPunto>
   ] ;
   rr:predicateObjectMap [
      rr:predicate grel:p_string_sep ;
      rr:objectMap [ rr:constant "/" ]
   ]
].


# #####################
# # UNIT OF MEASURE
# #####################
<UMMappingForHeight> a rr:TriplesMap;
rml:logicalSource <#LogicalSourceLakesHeight> ;
  rr:subjectMap [
    fnml:functionValue [
       rr:predicateObjectMap [
         rr:predicate fno:executes ;
         rr:objectMap [ rr:constant grel:array_join ]
       ];
       rr:predicateObjectMap [
          rr:predicate grel:p_array_a ;
          rr:objectMap [ rr:constant "https://w3id.org/italia/lombardia/data/measurement-unit"]
       ] ;
       rr:predicateObjectMap [
          rr:predicate grel:p_array_a ;
          rr:objectMap <#SlugifyUMPunto>
       ] ;
       rr:predicateObjectMap [
          rr:predicate grel:p_string_sep ;
          rr:objectMap [ rr:constant "/" ]
       ]
    ];
    rr:class ispra-top:UnitOfMeasure
  ];
  rr:predicateObjectMap [
    rr:predicate rdfs:label ;
    rr:objectMap [ rr:template "Unit of measure: {unit_di_misura_altezza}" ; rr:language "en" ]
  ];
  rr:predicateObjectMap [
    rr:predicate rdfs:label ;
    rr:objectMap [ rr:template "Unità di misura: {unit_di_misura_testuale_punto}" ; rr:language "it" ]
  ];
  rr:predicateObjectMap [
    rr:predicate ispra-top:name;
    rr:objectMap [ rml:reference "unit_di_misura_testuale_punto" ; rr:language "it"]
  ];
  rr:predicateObjectMap [
    rr:predicate l0:name;
    rr:objectMap [ rml:reference "unit_di_misura_testuale_punto" ; rr:language "it"]
  ].

#########################
# URI OBS RESULT MAPPING
#########################
<#URLHeightObservationResult>
rr:termType rr:IRI ;
  fnml:functionValue [
     rr:predicateObjectMap [
       rr:predicate fno:executes ;
       rr:objectMap [ rr:constant grel:array_join ]
     ];
     rr:predicateObjectMap [
        rr:predicate grel:p_array_a ;
        rr:objectMap [ rr:constant "https://w3id.org/italia/lombardia/data/observation-value"]
     ] ;
     rr:predicateObjectMap [
        rr:predicate grel:p_array_a ;
        rr:objectMap <#MD5HeightUM>
     ] ;
     rr:predicateObjectMap [
        rr:predicate grel:p_string_sep ;
        rr:objectMap [ rr:constant "/" ]
     ]
  ].


# ##############################
# ## Point LINKING
# ##############################
<#PointMapping> a rr:TriplesMap ;
rml:logicalSource <#LogicalSourceCITYRDF> ;
rr:subjectMap [
  rr:template "https://w3id.org/italia/controlled-vocabulary/territorial-classifications/cities/{ID.value}-({starttime.value})" ;  rr:termType rr:IRI ;
].

##########################
##URI SAMPLE MAPPING
##########################
<#URISampleMapping>
rr:termType rr:IRI ;
fnml:functionValue [
   rr:predicateObjectMap [
     rr:predicate fno:executes ;
     rr:objectMap [ rr:constant grel:controls_if ]
   ];
   rr:predicateObjectMap [
     rr:predicate grel:bool_b ;
     rr:objectMap <#IsPuntoNull>
   ];
   rr:predicateObjectMap [
     rr:predicate grel:any_false ;
     rr:objectMap <#URIPuntoNotNullMapping>
   ]
 ] .

<#MD5Sample>
fnml:functionValue [
  rr:predicateObjectMap [
   rr:predicate fno:executes ;
   rr:objectMap [ rr:constant grel:string_md5 ]
  ];
  rr:predicateObjectMap [
   rr:predicate grel:valueParameter ;
   rr:objectMap [ rml:reference "punto"]
  ];
].


<#MD5HeightUM>
fnml:functionValue [
  rr:predicateObjectMap [
   rr:predicate fno:executes ;
   rr:objectMap [ rr:constant grel:string_md5 ]
  ];
  rr:predicateObjectMap [
   rr:predicate grel:valueParameter ;
   rr:objectMap <#UnionHeightUM>
  ];
].

<#UnionHeightUM>
fnml:functionValue [
 rr:predicateObjectMap [
   rr:predicate fno:executes ;
   rr:objectMap [ rr:constant grel:array_join ]
 ];
  rr:predicateObjectMap [
    rr:predicate grel:p_array_a ;
    rr:objectMap [ rml:reference "altezza"]
  ] ;
  rr:predicateObjectMap [
    rr:predicate grel:p_array_a ;
    rr:objectMap [ rml:reference "unit_di_misura_altezza"]
  ] ;
  rr:predicateObjectMap [
    rr:predicate grel:p_string_sep ;
    rr:objectMap [ rr:constant "" ]
  ]
] .

#############################
# OTHER SUPPORTING FUNCTION
#############################
#######################
### MD5 for height
#######################
<#MD5forHeight>
fnml:functionValue [
  rr:predicateObjectMap [
   rr:predicate fno:executes ;
   rr:objectMap [ rr:constant grel:string_md5 ]
  ];
  rr:predicateObjectMap [
   rr:predicate grel:valueParameter ;
   rr:objectMap <#ArrayJoinFullRow>
  ];
].


# ### Array join intera riga
<#ArrayJoinFullRow>
fnml:functionValue [
  rr:predicateObjectMap [
    rr:predicate fno:executes ;
    rr:objectMap [ rr:constant grel:array_join ]
  ] ;
  rr:predicateObjectMap [
    rr:predicate grel:p_array_a ;
    rr:objectMap  [ rr:template "{lago}"]
  ];
  rr:predicateObjectMap [
    rr:predicate grel:p_array_a ;
    rr:objectMap  [ rr:template "{punto}"]
  ];
  rr:predicateObjectMap [
    rr:predicate grel:p_array_a ;
    rr:objectMap  [ rr:template "{zero_idrometrico}"]
  ];
  rr:predicateObjectMap [
    rr:predicate grel:p_array_a ;
    rr:objectMap  [ rr:template "{altezza}"]
  ];
  rr:predicateObjectMap [
    rr:predicate grel:p_array_a ;
    rr:objectMap  [ rr:template "{unit_di_misura_altezza}"]
  ];
  rr:predicateObjectMap [
    rr:predicate grel:p_array_a ;
    rr:objectMap  [ rr:template "{unit_di_misura_zero}"]
  ];
  rr:predicateObjectMap [
    rr:predicate grel:p_array_a ;
    rr:objectMap  [ rr:template "{periodo}"]
  ];
  rr:predicateObjectMap [
    rr:predicate grel:p_array_a ;
    rr:objectMap  [ rr:template "{anno}"]
  ];
  rr:predicateObjectMap [
    rr:predicate grel:p_array_a ;
    rr:objectMap  [ rr:template "{zero_idrometrico_unit_di}"]
  ];
  rr:predicateObjectMap [
    rr:predicate grel:p_array_a ;
    rr:objectMap  [ rr:template "{unit_di_misura_testuale_punto}"]
  ];
  rr:predicateObjectMap [
    rr:predicate grel:p_string_sep ;
    rr:objectMap [ rr:constant "/" ]
  ];
].

<#SlugifylagoWithD>
fnml:functionValue [
	rr:predicateObjectMap [
		rr:predicate fno:executes ;
		rr:objectMap [ rr:constant idlab-fn:slugify ]
	];
  rr:predicateObjectMap [
    rr:predicate idlab-fn:str ;
    rr:objectMap <#RemoveD>
  ] ;
 ] .

<#SlugifylagoWithDI>
fnml:functionValue [
	rr:predicateObjectMap [
		rr:predicate fno:executes ;
		rr:objectMap [ rr:constant idlab-fn:slugify ]
	];
  rr:predicateObjectMap [
    rr:predicate idlab-fn:str ;
    rr:objectMap <#RemoveDI>
  ] ;
 ] .

<#SlugifylagoMaggiore>
fnml:functionValue [
	rr:predicateObjectMap [
		rr:predicate fno:executes ;
		rr:objectMap [ rr:constant idlab-fn:slugify ]
	];
  rr:predicateObjectMap [
    rr:predicate idlab-fn:str ;
    rr:objectMap <#RemoveLago>
  ] ;
 ] .


<#RemoveLago>
fnml:functionValue [
  rr:predicateObjectMap [
    rr:predicate fno:executes ;
    rr:objectMap [ rr:constant grel:string_replace ]
  ] ;
  rr:predicateObjectMap [
    rr:predicate grel:valueParameter ;
    rr:objectMap [ rml:reference "lago" ]
  ];
  rr:predicateObjectMap [
    rr:predicate grel:p_string_find ;
    rr:objectMap [ rr:constant "LAGO " ]
  ];
  rr:predicateObjectMap [
    rr:predicate grel:p_string_replace ;
    rr:objectMap [ rr:constant "" ]
  ]
] .

<#RemoveDI>
fnml:functionValue [
  rr:predicateObjectMap [
    rr:predicate fno:executes ;
    rr:objectMap [ rr:constant grel:string_replace ]
  ] ;
  rr:predicateObjectMap [
    rr:predicate grel:valueParameter ;
    rr:objectMap [ rml:reference "lago" ]
  ];
  rr:predicateObjectMap [
    rr:predicate grel:p_string_find ;
    rr:objectMap [ rr:constant "LAGO DI " ]
  ];
  rr:predicateObjectMap [
    rr:predicate grel:p_string_replace ;
    rr:objectMap [ rr:constant "" ]
  ]
] .

<#RemoveD>
fnml:functionValue [
  rr:predicateObjectMap [
    rr:predicate fno:executes ;
    rr:objectMap [ rr:constant grel:string_replace ]
  ] ;
  rr:predicateObjectMap [
    rr:predicate grel:valueParameter ;
    rr:objectMap [ rml:reference "lago" ]
  ];
  rr:predicateObjectMap [
    rr:predicate grel:p_string_find ;
    rr:objectMap [ rr:constant "LAGO D'" ]
  ];
  rr:predicateObjectMap [
    rr:predicate grel:p_string_replace ;
    rr:objectMap [ rr:constant "" ]
  ]
] .

<#SlugifyUMPunto>
fnml:functionValue [
	rr:predicateObjectMap [
		rr:predicate fno:executes ;
		rr:objectMap [ rr:constant idlab-fn:slugify ]
	];
  rr:predicateObjectMap [
    rr:predicate idlab-fn:str ;
    rr:objectMap [ rml:reference "unit_di_misura_altezza"]
  ] ;
 ] .
