@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .
@prefix rr: <http://www.w3.org/ns/r2rml#> .
@prefix rml: <http://semweb.mmlab.be/ns/rml#> .
@prefix ql: <http://semweb.mmlab.be/ns/ql#>.
@prefix fnml: <http://semweb.mmlab.be/ns/fnml#> .
@prefix grel: <http://users.ugent.be/~bjdmeest/function/grel.ttl#> .
@prefix fno: <https://w3id.org/function/ontology#> .
@prefix idlab-fn: <http://example.com/idlab/function/> .
@prefix sd: <http://www.w3.org/ns/sparql-service-description#> .
@prefix ispra-emf: <https://w3id.org/italia/env/onto/inspire-mf/>.
@prefix ispra-plc: <https://w3id.org/italia/env/onto/place/> .
@prefix ispra-top: <https://w3id.org/italia/env/onto/top/> .
@prefix hydro: <https://w3id.org/whow/onto/hydrography/>.
@prefix w-mon: <https://w3id.org/whow/onto/water-monitoring/>.
@prefix iotapit: <https://w3id.org/italia/onto/IoT/>.
@prefix l0: <https://w3id.org/italia/onto/l0/>.
@prefix tiapit: <https://w3id.org/italia/onto/TI/>.
@base <https://w3id.org/italia/lombardia/data/> .


# #LogicalSourceRivers
<#LogicalSourceRivers> a rml:BaseSource ;
    rml:source "kr6i-f553.csv" ;
    rml:referenceFormulation ql:CSV .

##Logical Source PROVINCE RDF
<#InputSPARQL>
    a sd:Service ;
    sd:endpoint <https://schema.gov.it/sparql> ;
    sd:supportedLanguage sd:SPARQL11Query ;
    sd:resultFormat <http://www.w3.org/ns/formats/SPARQL_Results_JSON> .

<#LogicalSourcePROVINCERDF> a rml:BaseSource ;
     rml:source <#InputSPARQL>;
     rml:referenceFormulation ql:JSONPath;
     rml:iterator "$.results.bindings[*]";
     rml:query """
     PREFIX skos: <http://www.w3.org/2004/02/skos/core#>
     PREFIX clv: <https://w3id.org/italia/onto/CLV/>

     SELECT ?s ?provincia ?ID
     WHERE { ?s a skos:Concept ;
          skos:inScheme <https://w3id.org/italia/controlled-vocabulary/territorial-classifications/provinces> ;
          skos:notation ?ID ;
          clv:acronym ?provincia .

     } """
.

##Logical Source CITY RDF
<#LogicalSourceCITYRDF> a rml:BaseSource ;
      rml:source <#InputSPARQL>;
      rml:referenceFormulation ql:JSONPath;
      rml:iterator "$.results.bindings[*]";
      rml:query """
      PREFIX skos: <http://www.w3.org/2004/02/skos/core#>
PREFIX clv: <https://w3id.org/italia/onto/CLV/>
PREFIX ti: <https://w3id.org/italia/onto/TI/>
SELECT ?s ?ID ?nome ?starttime ?endTime
WHERE { ?s a skos:Concept ;
        skos:inScheme <https://w3id.org/italia/controlled-vocabulary/territorial-classifications/cities> ;
        skos:notation ?ID ;
        skos:prefLabel ?nome ;
        clv:hasSOValidity/ti:endTime ?endTime ;
        clv:hasSOValidity/ti:startTime ?starttime ;
        clv:hasHigherRank <https://w3id.org/italia/controlled-vocabulary/territorial-classifications/regions/03> .
        FILTER (str(?endTime)="9999-12-31")

}
 """
      .


###########################################################
##                  MAPPING RULES
##########################################################

#### RIVER WATER OBSERVATION MAPPING
<#WaterPCPRiverObservationMapping> a rr:TriplesMap;
rml:logicalSource <#LogicalSourceRivers>;
 rr:subjectMap [
   fnml:functionValue [
     rr:predicateObjectMap [
       rr:predicate fno:executes ;
       rr:objectMap [ rr:constant grel:controls_if ]
     ];
     rr:predicateObjectMap [
       rr:predicate grel:bool_b ;
       rr:objectMap <#ListContainHeightFlow>
     ];
     rr:predicateObjectMap [
       rr:predicate grel:any_false ;
       rr:objectMap <#PhysicoChemicalObservationRiverMapping>
     ]
   ] ;
   rr:class w-mon:WaterPhysicoChemicalParameterObservation
] ;
rr:predicateObjectMap [
 rr:predicate rdfs:label ;
 rr:objectMap [ rr:template "Observation for the physico-chemical parameter {parametro} with value {valore_testuale} {unita_di_misura} for river water body {corso_d_acqua} of the water basin {bacino_idrografico} for year {anno}" ; rr:language "en" ]
];
rr:predicateObjectMap [
 rr:predicate rdfs:label ;
 rr:objectMap [ rr:template "Osservazione del parametro fisico-chimico {parametro} con valore {valore_testuale} {unita_di_misura} per il corpo fluviale {corso_d_acqua} del bacino idrografico {bacino_idrografico} fatta nell'anno {anno}" ; rr:language "it" ]
];
rr:predicateObjectMap [
 rr:predicate w-mon:hasObservationSample ;
 rr:objectMap [ rr:template "https://w3id.org/italia/lombardia/data/water-sample/{codice_stazione}-{coord_x}-{coord_y}" ; rr:termType rr:IRI ]
];
rr:predicateObjectMap [
  rr:predicate w-mon:hasResult ;
  rr:objectMap <#URLifyObservationResultRivers>
];
rr:predicateObjectMap [
   rr:predicate w-mon:hasWaterObservableProperty ;
   rr:objectMap <#URIObservablePropertiesCASRiversMapping>
] ;
rr:predicateObjectMap [
   rr:predicate w-mon:hasWaterObservableProperty ;
   rr:objectMap <#URIObservablePropertiesWISERiversMapping>
] ;
rr:predicateObjectMap [
   rr:predicate w-mon:hasWaterObservableProperty ;
   rr:objectMap <#URIObservablePropertiesOtherRiversMapping>
] ;
rr:predicateObjectMap [
   rr:predicate w-mon:hasChemicalSubstance ;
   rr:objectMap [ rr:template "https://w3id.org/whow/controlled-vocabulary/chemical-substances/cas-{cas}" ; rr:termType rr:IRI ]
] ;
rr:predicateObjectMap [
  rr:predicate ispra-emf:generationTime ;
  rr:objectMap [ rr:template "https://w3id.org/italia/lombardia/data/temporal-entity/({data_campionamento})"; rr:termType rr:IRI ]
];
rr:predicateObjectMap [
  rr:predicate tiapit:hasTemporalCoverage ;
  rr:objectMap [ rr:template "https://w3id.org/italia/lombardia/data/year/{anno}"; rr:termType rr:IRI ]
];
rr:predicateObjectMap [
   rr:predicate ispra-emf:hasFeatureOfInterest ;
   rr:objectMap <#URIWaterRiverBody>
].

<#PhysicoChemicalObservationRiverMapping>
rr:termType rr:IRI ;
fnml:functionValue [
 rr:predicateObjectMap [
   rr:predicate fno:executes ;
   rr:objectMap [ rr:constant grel:array_join ]
 ] ;
 rr:predicateObjectMap [
   rr:predicate grel:p_array_a ;
   rr:objectMap  [ rr:constant "https://w3id.org/italia/lombardia/data/water-observation"]
 ];
 rr:predicateObjectMap [
   rr:predicate grel:p_array_a ;
   rr:objectMap  <#MD5RiverExecution>
 ];
 rr:predicateObjectMap [
   rr:predicate grel:p_string_sep ;
   rr:objectMap [ rr:constant "/" ]
 ];
].

<#ListContainHeightFlow>
fnml:functionValue [
  	rr:predicateObjectMap [
  		rr:predicate fno:executes ;
  		rr:objectMap [ rr:constant idlab-fn:listContainsElement ]
  	];
    rr:predicateObjectMap [
      rr:predicate idlab-fn:list ;
      rr:objectMap [ rr:constant "Portata"]
    ] ;
    rr:predicateObjectMap [
      rr:predicate idlab-fn:list ;
      rr:objectMap [ rr:constant "Altezza idrometrica"]
    ] ;
    rr:predicateObjectMap [
      rr:predicate idlab-fn:str ;
      rr:objectMap [ rml:reference "parametro" ]
    ] ;
].

#######################################
# TEMPORAL ENTITY OBJECT DATE MAPPING
#######################################
<#TemporalEntityDateMapping> a rr:TriplesMap ;
rml:logicalSource <#LogicalSourceRivers>;
rr:subjectMap [
  rr:template "https://w3id.org/italia/lombardia/data/temporal-entity/({data_campionamento})";
  rr:class ispra-top:TemporalEntity
] ;
rr:predicateObjectMap [
   rr:predicate rdfs:label ;
   rr:objectMap [ rr:template "Temporal Entity: {data_campionamento}" ; rr:language "en" ]
 ];
 rr:predicateObjectMap [
    rr:predicate rdfs:label ;
    rr:objectMap [ rr:template "Entit√† temporale: {data_campionamento}" ; rr:language "it" ]
 ];
 rr:predicateObjectMap [
    rr:predicate ispra-top:time ;
    rr:objectMap [ rml:reference "data_campionamento" ; rr:datatype xsd:date ]
 ].



# ########################################
# ## TEMPORAL ENTITY OBJECT YEAR MAPPING
# ########################################
<#TemporalEntityYearMapping> a rr:TriplesMap ;
rml:logicalSource <#LogicalSourceRivers>;
rr:subjectMap [
  rr:template "https://w3id.org/italia/lombardia/data/year/{anno}";
  rr:class tiapit:Year
];
rr:predicateObjectMap [
   rr:predicate rdfs:label ;
   rr:objectMap [ rr:template "Year: {anno}" ; rr:language "en" ]
 ];
 rr:predicateObjectMap [
    rr:predicate rdfs:label ;
    rr:objectMap [ rr:template "Anno: {anno}" ; rr:language "it" ]
 ];
 rr:predicateObjectMap [
    rr:predicate tiapit:year ;
    rr:objectMap [ rml:reference "anno" ; rr:datatype xsd:gYear ]
 ].

####################
# WISE COLUMN MGMT
####################
<#URIObservablePropertiesWISERiversMapping>
rr:termType rr:IRI ;
 fnml:functionValue [
    rr:predicateObjectMap [
      rr:predicate fno:executes ;
      rr:objectMap [ rr:constant grel:controls_if ]
    ];
    rr:predicateObjectMap [
      rr:predicate grel:bool_b ;
      rr:objectMap <#IsWISENullRivers>
    ];
    rr:predicateObjectMap [
      rr:predicate grel:any_false ;
      rr:objectMap <#WISEMappingRivers>
    ]
  ] .

<#WISEMappingRivers>
rr:termType rr:IRI ;
fnml:functionValue [
rr:predicateObjectMap [
   rr:predicate fno:executes ;
   rr:objectMap [ rr:constant grel:array_join ]
 ] ;
 rr:predicateObjectMap [
   rr:predicate grel:p_array_a ;
   rr:objectMap  [ rr:constant "https://w3id.org/italia/lombardia/data/observable-properties"]
 ];
 rr:predicateObjectMap [
   rr:predicate grel:p_array_a ;
   rr:objectMap <#RemoveWISERivers>
 ];
 rr:predicateObjectMap [
   rr:predicate grel:p_string_sep ;
   rr:objectMap [ rr:constant "/" ]
 ];
].

<#IsWISENullRivers>
fnml:functionValue [
  rr:predicateObjectMap [
    rr:predicate fno:executes ;
    rr:objectMap [ rr:constant idlab-fn:isNull ]
  ];
  rr:predicateObjectMap [
    rr:predicate idlab-fn:str ;
    rr:objectMap [ rml:reference "wise" ]
  ]
] .

<#RemoveWISERivers>
fnml:functionValue [
  rr:predicateObjectMap [
    rr:predicate fno:executes ;
    rr:objectMap [ rr:constant grel:string_replace ]
  ] ;
  rr:predicateObjectMap [
    rr:predicate grel:valueParameter ;
    rr:objectMap [ rml:reference "wise" ]
  ];
  rr:predicateObjectMap [
    rr:predicate grel:p_string_find ;
    rr:objectMap [ rr:constant "WISE " ]
  ];
  rr:predicateObjectMap [
    rr:predicate grel:p_string_replace ;
    rr:objectMap [ rr:constant "wise-" ]
  ]
] .

#################
# CAS COLUMN MGMT
#################
<#URIObservablePropertiesCASRiversMapping>
rr:termType rr:IRI ;
 fnml:functionValue [
    rr:predicateObjectMap [
      rr:predicate fno:executes ;
      rr:objectMap [ rr:constant grel:controls_if ]
    ];
    rr:predicateObjectMap [
      rr:predicate grel:bool_b ;
      rr:objectMap <#IsCasNullRivers>
    ];
    rr:predicateObjectMap [
      rr:predicate grel:any_false ;
      rr:objectMap [ rr:template "https://w3id.org/italia/lombardia/data/observable-properties/{cas}" ]
    ]
  ] .

<#IsCasNullRivers>
fnml:functionValue [
  rr:predicateObjectMap [
    rr:predicate fno:executes ;
    rr:objectMap [ rr:constant idlab-fn:isNull ]
  ];
  rr:predicateObjectMap [
    rr:predicate idlab-fn:str ;
    rr:objectMap [ rml:reference "cas" ]
  ]
] .

######################
## OTHER COLUMN MGMT
######################
<#URIObservablePropertiesOtherRiversMapping>
rr:termType rr:IRI ;
 fnml:functionValue [
    rr:predicateObjectMap [
      rr:predicate fno:executes ;
      rr:objectMap [ rr:constant grel:controls_if ]
    ];
    rr:predicateObjectMap [
      rr:predicate grel:bool_b ;
      rr:objectMap <#IsOtherNullRivers>
    ];
    rr:predicateObjectMap [
      rr:predicate grel:any_false ;
      rr:objectMap <#OtherMappingRivers>
    ]
  ] .

<#IsOtherNullRivers>
fnml:functionValue [
  rr:predicateObjectMap [
    rr:predicate fno:executes ;
    rr:objectMap [ rr:constant idlab-fn:isNull ]
  ];
  rr:predicateObjectMap [
    rr:predicate idlab-fn:str ;
    rr:objectMap [ rml:reference "other" ]
  ]
] .

<#OtherMappingRivers>
rr:termType rr:IRI ;
fnml:functionValue [
rr:predicateObjectMap [
   rr:predicate fno:executes ;
   rr:objectMap [ rr:constant grel:array_join ]
 ] ;
 rr:predicateObjectMap [
   rr:predicate grel:p_array_a ;
   rr:objectMap  [ rr:constant "https://w3id.org/italia/lombardia/data/observable-properties"]
 ];
 rr:predicateObjectMap [
   rr:predicate grel:p_array_a ;
   rr:objectMap <#RemoveCASIDRivers>
 ];
 rr:predicateObjectMap [
   rr:predicate grel:p_string_sep ;
   rr:objectMap [ rr:constant "/" ]
 ];
].


<#RemoveCASIDRivers>
fnml:functionValue [
  rr:predicateObjectMap [
    rr:predicate fno:executes ;
    rr:objectMap [ rr:constant grel:string_replace ]
  ] ;
  rr:predicateObjectMap [
    rr:predicate grel:valueParameter ;
    rr:objectMap [ rml:reference "other" ]
  ];
  rr:predicateObjectMap [
    rr:predicate grel:p_string_find ;
    rr:objectMap [ rr:constant "CASID" ]
  ];
  rr:predicateObjectMap [
    rr:predicate grel:p_string_replace ;
    rr:objectMap [ rr:constant "" ]
  ]
] .

##################################
### WATER SAMPLE OBJECT MAPPING
##################################
<#ObservationSampleRiversMapping> a rr:TriplesMap;
rml:logicalSource <#LogicalSourceRivers>;
  rr:subjectMap [
    fnml:functionValue [
      rr:predicateObjectMap [
        rr:predicate fno:executes ;
        rr:objectMap [ rr:constant grel:controls_if ]
      ];
      rr:predicateObjectMap [
        rr:predicate grel:bool_b ;
        rr:objectMap <#ListContainHeightFlow>
      ];
      rr:predicateObjectMap [
        rr:predicate grel:any_false ;
        rr:objectMap [ rr:template "https://w3id.org/italia/lombardia/data/water-sample/{codice_stazione}-{coord_x}-{coord_y}" ]
      ]
    ] ;
    rr:class w-mon:WaterSample , w-mon:WaterFeature
 ];
 rr:predicateObjectMap [
    rr:predicate rdfs:label ;
    rr:objectMap [ rr:template "Water sample obtained by station {codice_stazione} - ({coord_x}-{coord_y})" ; rr:language "en" ]
  ];
  rr:predicateObjectMap [
     rr:predicate rdfs:label ;
     rr:objectMap [ rr:template "Campione di acqua ottenuto dalla stazione {codice_stazione} - ({coord_x}-{coord_y})" ; rr:language "it" ]
  ];
  rr:predicateObjectMap [
    rr:predicate w-mon:isObtainedBy ;
    rr:objectMap [ rr:template "https://w3id.org/italia/lombardia/data/water-sampler/{codice_stazione}"; rr:termType rr:IRI ]
  ];
  rr:predicateObjectMap [
    rr:predicate w-mon:isSampleOf ;
    rr:objectMap <#URIWaterRiverBody>
  ] .


<#URIWaterRiverBody>
rr:termType rr:IRI ;
fnml:functionValue [
 rr:predicateObjectMap [
   rr:predicate fno:executes ;
   rr:objectMap [ rr:constant grel:array_join ]
 ] ;
 rr:predicateObjectMap [
   rr:predicate grel:p_array_a ;
   rr:objectMap  [ rr:constant "https://w3id.org/italia/lombardia/data/river-water-body"]
 ];
 rr:predicateObjectMap [
   rr:predicate grel:p_array_a ;
   rr:objectMap <#MD5CorsoDAcqua>
 ];
 rr:predicateObjectMap [
   rr:predicate grel:p_string_sep ;
   rr:objectMap [ rr:constant "/" ]
 ]
].

################################################
### OBSERVATION VALUE OBJECT MAPPING IF RANGE
################################################
<#ObservationValueRangeRiversMapping> a rr:TriplesMap;
rml:logicalSource <#LogicalSourceRivers>;
  rr:subjectMap [
    fnml:functionValue [
      rr:predicateObjectMap [
        rr:predicate fno:executes ;
        rr:objectMap [ rr:constant grel:controls_if ]
      ];
      rr:predicateObjectMap [
        rr:predicate grel:bool_b ;
        rr:objectMap <#ListContainHeightFlow>
      ];
      rr:predicateObjectMap [
        rr:predicate grel:any_false ;
        rr:objectMap <#PhysicoChemicalObsValueRangeRiverMapping>
      ]
    ] ;
    rr:class w-mon:ObservationValue
  ];
  rr:predicateObjectMap [
    rr:predicate rdfs:label ;
    rr:objectMap [ rr:template "Observation value {valore_testuale} {unita_di_misura}" ; rr:language "en" ]
  ];
  rr:predicateObjectMap [
    rr:predicate rdfs:label ;
    rr:objectMap [ rr:template "Valore dell'osservazione {valore_testuale} {unita_di_misura_testuale}" ; rr:language "it" ]
  ];
  rr:predicateObjectMap [
    rr:predicate w-mon:lowerBound;
    rr:objectMap [ rr:constant "0" ; rr:datatype xsd:float ]
  ];
  rr:predicateObjectMap [
    rr:predicate w-mon:upperBound;
    rr:objectMap [ rml:reference "valore_numerico" ; rr:datatype xsd:float ]
  ];
  rr:predicateObjectMap [
    rr:predicate ispra-top:hasUnitOfMeasure;
    rr:objectMap <#URIforUnitOfMeasureRivers>
  ].


<#PhysicoChemicalObsValueRangeRiverMapping>
rr:termType rr:IRI ;
  fnml:functionValue [
    rr:predicateObjectMap [
      rr:predicate fno:executes ;
      rr:objectMap [ rr:constant idlab-fn:trueCondition ]
    ];
    rr:predicateObjectMap [
      rr:predicate idlab-fn:strBoolean ;
      rr:objectMap <#MinorSegnoRiverMapping>
    ];
    rr:predicateObjectMap [
      rr:predicate idlab-fn:str ;
      rr:objectMap <#URIObservableValueObjectForRiver>
    ]
  ] .

<#URIObservableValueObjectForRiver>
rr:termType rr:IRI ;
  fnml:functionValue [
   rr:predicateObjectMap [
     rr:predicate fno:executes ;
     rr:objectMap [ rr:constant grel:array_join ]
   ];
   rr:predicateObjectMap [
      rr:predicate grel:p_array_a ;
      rr:objectMap [ rr:constant "https://w3id.org/italia/lombardia/data/observation-value"]
   ] ;
   rr:predicateObjectMap [
      rr:predicate grel:p_array_a ;
      rr:objectMap <#MD5ValueUMRivers>
   ] ;
   rr:predicateObjectMap [
      rr:predicate grel:p_string_sep ;
      rr:objectMap [ rr:constant "/" ]
   ]
  ] .

<#URIforUnitOfMeasureRivers>
rr:termType rr:IRI ;
fnml:functionValue [
 rr:predicateObjectMap [
   rr:predicate fno:executes ;
   rr:objectMap [ rr:constant grel:array_join ]
 ] ;
 rr:predicateObjectMap [
   rr:predicate grel:p_array_a ;
   rr:objectMap  [ rr:constant "https://w3id.org/italia/lombardia/data/measurement-unit"]
 ];
 rr:predicateObjectMap [
   rr:predicate grel:p_array_a ;
   rr:objectMap <#SlugifyUMRivers>
 ];
 rr:predicateObjectMap [
   rr:predicate grel:p_string_sep ;
   rr:objectMap [ rr:constant "/" ]
 ];
].

<#MinorSegnoRiverMapping>
fnml:functionValue [
  rr:predicateObjectMap [
    rr:predicate fno:executes ;
    rr:objectMap [ rr:constant grel:string_contains ]
  ];
  rr:predicateObjectMap [
    rr:predicate grel:valueParameter ;
    rr:objectMap [ rml:reference "segno"]
  ];
  rr:predicateObjectMap [
    rr:predicate grel:string_sub ;
    rr:objectMap [ rr:constant "<" ]
  ]
] .

<#SlugifyUMRivers>
fnml:functionValue [
	rr:predicateObjectMap [
		rr:predicate fno:executes ;
		rr:objectMap [ rr:constant idlab-fn:slugify ]
	];
  rr:predicateObjectMap [
    rr:predicate idlab-fn:str ;
    rr:objectMap [ rml:reference "unita_di_misura"]
  ] ;
 ] .


##################################################
### OBSERVATION VALUE OBJECT MAPPING IF NOT RANGE
##################################################
<#ObservationValueNotRangeRiversMapping> a rr:TriplesMap;
rml:logicalSource <#LogicalSourceRivers>;
 rr:subjectMap [
   fnml:functionValue [
    rr:predicateObjectMap [
      rr:predicate fno:executes ;
      rr:objectMap [ rr:constant grel:controls_if ]
    ];
    rr:predicateObjectMap [
      rr:predicate grel:bool_b ;
      rr:objectMap <#ListContainHeightFlow>
    ];
    rr:predicateObjectMap [
      rr:predicate grel:any_false ;
      rr:objectMap <#PhysicoChemicalObsValueNotRangeRiversMapping>
    ]
   ] ;
   rr:class w-mon:ObservationValue
 ];
 rr:predicateObjectMap [
   rr:predicate rdfs:label ;
   rr:objectMap [ rr:template "Observation value {valore_testuale} {unita_di_misura}" ; rr:language "en" ]
 ];
 rr:predicateObjectMap [
   rr:predicate rdfs:label ;
   rr:objectMap [ rr:template "Valore dell'osservazione {valore_testuale} {unita_di_misura_testuale}" ; rr:language "it" ]
 ];
 rr:predicateObjectMap [
   rr:predicate ispra-top:value;
   rr:objectMap [ rml:reference "valore_numerico" ; rr:datatype xsd:float ]
 ];
 rr:predicateObjectMap [
   rr:predicate ispra-top:hasUnitOfMeasure;
   rr:objectMap <#URIforUnitOfMeasureRivers>
 ].

<#PhysicoChemicalObsValueNotRangeRiversMapping>
rr:termType rr:IRI ;
 fnml:functionValue [
   rr:predicateObjectMap [
     rr:predicate fno:executes ;
     rr:objectMap [ rr:constant idlab-fn:trueCondition ]
   ];
   rr:predicateObjectMap [
     rr:predicate idlab-fn:strBoolean ;
     rr:objectMap <#NotMinorSegnoRiversMapping>
   ];
   rr:predicateObjectMap [
     rr:predicate idlab-fn:str ;
     rr:objectMap <#URIObservableValueObjectForRiver>
   ]
 ] .

<#NotMinorSegnoRiversMapping>
 fnml:functionValue [
  rr:predicateObjectMap [
    rr:predicate fno:executes ;
    rr:objectMap [ rr:constant idlab-fn:isNull ]
  ];
  rr:predicateObjectMap [
    rr:predicate idlab-fn:str ;
    rr:objectMap [ rml:reference "segno" ]
  ]
] .

##################################
# UNIF OF MEASURE OBJECT MAPPING
##################################
<#UnitOfMeasureRiversMapping> a rr:TriplesMap;
rml:logicalSource <#LogicalSourceRivers>;
 rr:subjectMap [
   fnml:functionValue [
    rr:predicateObjectMap [
      rr:predicate fno:executes ;
      rr:objectMap [ rr:constant grel:controls_if ]
    ];
    rr:predicateObjectMap [
      rr:predicate grel:bool_b ;
      rr:objectMap <#ListContainHeightFlow>
    ];
    rr:predicateObjectMap [
      rr:predicate grel:any_false ;
      rr:objectMap <#PhysicoChemicalUMRiversMapping>
    ]
   ] ;
   rr:class ispra-top:UnitOfMeasure
 ];
 rr:predicateObjectMap [
    rr:predicate rdfs:label ;
    rr:objectMap [ rr:template "Unit of measure {unita_di_misura}" ; rr:language "en"]
 ];
 rr:predicateObjectMap [
    rr:predicate rdfs:label ;
    rr:objectMap [ rr:template "Unit√† di misura {unita_di_misura_testuale}" ; rr:language "it"]
 ];
 rr:predicateObjectMap [
    rr:predicate l0:name ;
    rr:objectMap [ rml:reference "unita_di_misura_testuale" ; rr:language "it" ]
 ];
 rr:predicateObjectMap [
    rr:predicate ispra-top:name ;
    rr:objectMap [ rml:reference "unita_di_misura_testuale" ; rr:language "it" ]
 ].


<#PhysicoChemicalUMRiversMapping>
rr:termType rr:IRI ;
 fnml:functionValue [
  rr:predicateObjectMap [
    rr:predicate fno:executes ;
    rr:objectMap [ rr:constant grel:array_join ]
  ] ;
  rr:predicateObjectMap [
    rr:predicate grel:p_array_a ;
    rr:objectMap  [ rr:constant "https://w3id.org/italia/lombardia/data/measurement-unit"]
  ];
  rr:predicateObjectMap [
    rr:predicate grel:p_array_a ;
    rr:objectMap <#SlugifyUMRivers>
  ];
  rr:predicateObjectMap [
    rr:predicate grel:p_string_sep ;
    rr:objectMap [ rr:constant "/" ]
  ]
 ].

###################
### WATER SAMPLER MAPPING
###################
<#WaterSamplerForRiverMapping> a rr:TriplesMap;
rml:logicalSource <#LogicalSourceRivers>;
rr:subjectMap [
  fnml:functionValue [
    rr:predicateObjectMap [
      rr:predicate fno:executes ;
      rr:objectMap [ rr:constant grel:controls_if ]
    ];
    rr:predicateObjectMap [
      rr:predicate grel:bool_b ;
      rr:objectMap <#ListContainHeightFlow>
    ];
    rr:predicateObjectMap [
      rr:predicate grel:any_false ;
        rr:objectMap [ rr:template "https://w3id.org/italia/lombardia/data/water-sampler/{codice_stazione}" ]
    ]
  ] ;
  rr:class w-mon:WaterSampler
 ];
 rr:predicateObjectMap [
  rr:predicate rdfs:label ;
  rr:objectMap [ rr:template "Water Sampler: Station {codice_stazione}" ; rr:language "en"]
];
 rr:predicateObjectMap [
  rr:predicate rdfs:label ;
  rr:objectMap [ rr:template "Stazione prelievo {codice_stazione}" ; rr:language "it"]
];
rr:predicateObjectMap [
 rr:predicate ispra-plc:hasGeometry ;
 rr:objectMap [ rr:template "https://w3id.org/italia/lombardia/data/geometry/{coord_y}-{coord_x}" ; rr:termType rr:IRI ]
];
rr:predicateObjectMap [
  rr:predicate ispra-plc:hasProvince ;
  rr:objectMap [
     rr:parentTriplesMap <#ProvinceForRiverMapping> ;
     rr:joinCondition [
        rr:child "provincia";
        rr:parent "provincia.value" ;
     ] ;
   ] ;
 ];
 rr:predicateObjectMap [
    rr:predicate ispra-plc:hasMunicipality ;
    rr:objectMap [
       rr:parentTriplesMap <#CityForRiverMapping> ;
       rr:joinCondition [
          rr:child "comune";
          rr:parent "nome.value" ;
       ] ;
    ]
] .

# ##############################
# ## CITY LINKING
# ##############################

<#CityForRiverMapping> a rr:TriplesMap ;
rml:logicalSource <#LogicalSourceCITYRDF> ;
rr:subjectMap [
  rr:template "https://w3id.org/italia/controlled-vocabulary/territorial-classifications/cities/{ID.value}-({starttime.value})" ;  rr:termType rr:IRI ;
].

# ##############################
# ## PROVINCE LINKING
# ##############################

<#ProvinceForRiverMapping> a rr:TriplesMap ;
rml:logicalSource <#LogicalSourcePROVINCERDF> ;
rr:subjectMap [
  rr:template "https://w3id.org/italia/controlled-vocabulary/territorial-classifications/provinces/{ID.value}" ;  rr:termType rr:IRI ;
].

####################################
## GEOMETRY MAPPING OBJECT MAPPING
####################################
<#GeometryForRiverMapping> a rr:TriplesMap ;
rml:logicalSource <#LogicalSourceRivers> ;
rr:subjectMap [
  fnml:functionValue [
    rr:predicateObjectMap [
      rr:predicate fno:executes ;
      rr:objectMap [ rr:constant grel:controls_if ]
    ];
    rr:predicateObjectMap [
      rr:predicate grel:bool_b ;
      rr:objectMap <#ListContainHeightFlow>
    ];
    rr:predicateObjectMap [
      rr:predicate grel:any_false ;
      rr:objectMap [ rr:template "https://w3id.org/italia/lombardia/data/geometry/{coord_y}-{coord_x}"; rr:termType rr:IRI ]
    ]
  ] ;
  rr:class ispra-plc:Geometry
] ;
rr:predicateObjectMap [
  rr:predicate rdfs:label;
  rr:objectMap [ rr:template "Geometria {coord_y}-{coord_x}" ; rr:language "it" ]
] ;
rr:predicateObjectMap [
  rr:predicate rdfs:label;
  rr:objectMap [ rr:template "Geometry {coord_y}-{coord_x}" ; rr:language "en" ]
] ;
rr:predicateObjectMap [
  rr:predicate ispra-top:isClassifiedBy;
  rr:objectMap [ rr:constant "https://w3id.org/italia/lombardia/data/geometry-type/point"; rr:termType rr:IRI ]
] ;
rr:predicateObjectMap [
  rr:predicate ispra-plc:lat;
  rr:objectMap [ rml:reference "coord_y" ]
] ;
rr:predicateObjectMap [
  rr:predicate ispra-plc:long;
  rr:objectMap [ rml:reference "coord_x" ]
] .


#############################################
## GEOMETRY TYPE MAPPING OBJECT MAPPING
#############################################
<#GeometryTypeForRiverMapping> a rr:TriplesMap ;
rml:logicalSource <#LogicalSourceRivers> ;
rr:subjectMap [
  fnml:functionValue [
    rr:predicateObjectMap [
      rr:predicate fno:executes ;
      rr:objectMap [ rr:constant grel:controls_if ]
    ];
    rr:predicateObjectMap [
      rr:predicate grel:bool_b ;
      rr:objectMap <#ListContainHeightFlow>
    ];
    rr:predicateObjectMap [
      rr:predicate grel:any_false ;
      rr:objectMap [ rr:constant "https://w3id.org/italia/lombardia/data/geometry-type/point"; rr:termType rr:IRI ]
    ]
  ] ;
  rr:class ispra-plc:GeometryType
] ;
rr:predicateObjectMap [
  rr:predicate rdfs:label;
  rr:objectMap [ rr:constant "Geometry Type: Point" ; rr:language "en" ]
] ;
rr:predicateObjectMap [
  rr:predicate rdfs:label;
  rr:objectMap [ rr:constant "Tipo di Geometria: Punto" ; rr:language "it" ]
] ;
rr:predicateObjectMap [
  rr:predicate ispra-top:name;
  rr:objectMap [ rr:constant "Punto" ; rr:language "it" ]
] ;
rr:predicateObjectMap [
  rr:predicate ispra-top:name;
  rr:objectMap [ rr:constant "Point" ; rr:language "en" ]
] .

##########################################
##### URI of Observation Value Mapping
##########################################
<#URLifyObservationResultRivers>
rr:termType rr:IRI ;
fnml:functionValue [
 rr:predicateObjectMap [
   rr:predicate fno:executes ;
   rr:objectMap [ rr:constant grel:array_join ]
 ];
  rr:predicateObjectMap [
    rr:predicate grel:p_array_a ;
    rr:objectMap [ rr:constant "https://w3id.org/italia/lombardia/data/observation-value"]
  ] ;
  rr:predicateObjectMap [
    rr:predicate grel:p_array_a ;
    rr:objectMap <#MD5ValueUMRivers>
  ] ;
  rr:predicateObjectMap [
    rr:predicate grel:p_string_sep ;
    rr:objectMap [ rr:constant "/" ]
  ]
] .

<#MD5ValueUMRivers>
fnml:functionValue [
  rr:predicateObjectMap [
   rr:predicate fno:executes ;
   rr:objectMap [ rr:constant grel:string_md5 ]
  ];
  rr:predicateObjectMap [
   rr:predicate grel:valueParameter ;
   rr:objectMap <#UnionValueUMRivers>
  ];
].

<#UnionValueUMRivers>
fnml:functionValue [
 rr:predicateObjectMap [
   rr:predicate fno:executes ;
   rr:objectMap [ rr:constant grel:array_join ]
 ];
  rr:predicateObjectMap [
    rr:predicate grel:p_array_a ;
    rr:objectMap [ rml:reference "valore_testuale"]
  ] ;
  rr:predicateObjectMap [
    rr:predicate grel:p_array_a ;
    rr:objectMap [ rml:reference "unita_di_misura_testuale"]
  ] ;
  rr:predicateObjectMap [
    rr:predicate grel:p_string_sep ;
    rr:objectMap [ rr:constant "" ]
  ]
] .


## MD5 River Execution
<#MD5RiverExecution>
fnml:functionValue [
  rr:predicateObjectMap [
   rr:predicate fno:executes ;
   rr:objectMap [ rr:constant grel:string_md5 ]
  ];
  rr:predicateObjectMap [
   rr:predicate grel:valueParameter ;
   rr:objectMap <#ArrayJoinEntryRiver>
  ];
].


### Array join intera riga
<#ArrayJoinEntryRiver>
fnml:functionValue [
  rr:predicateObjectMap [
    rr:predicate fno:executes ;
    rr:objectMap [ rr:constant grel:array_join ]
  ] ;
  rr:predicateObjectMap [
    rr:predicate grel:p_array_a ;
    rr:objectMap  [ rml:reference "bacino_idrografico"]
  ];
  rr:predicateObjectMap [
    rr:predicate grel:p_array_a ;
    rr:objectMap  [ rml:reference "corso_d_acqua"]
  ];
  rr:predicateObjectMap [
    rr:predicate grel:p_array_a ;
    rr:objectMap  [ rml:reference "corpo_idrico"]
  ];
  rr:predicateObjectMap [
    rr:predicate grel:p_array_a ;
    rr:objectMap  [ rml:reference "provincia"]
  ];
  rr:predicateObjectMap [
    rr:predicate grel:p_array_a ;
    rr:objectMap  [ rml:reference "comune"]
  ];
  rr:predicateObjectMap [
    rr:predicate grel:p_array_a ;
    rr:objectMap  [ rml:reference "coord_x"]
  ];
  rr:predicateObjectMap [
    rr:predicate grel:p_array_a ;
    rr:objectMap  [ rml:reference "coord_y"]
  ];
  rr:predicateObjectMap [
    rr:predicate grel:p_array_a ;
    rr:objectMap  [ rml:reference "codice_stazione"]
  ];
  rr:predicateObjectMap [
    rr:predicate grel:p_array_a ;
    rr:objectMap  [ rml:reference "data_campionamento"]
  ];
  rr:predicateObjectMap [
    rr:predicate grel:p_array_a ;
    rr:objectMap  [ rml:reference "parametro"]
  ];
  rr:predicateObjectMap [
    rr:predicate grel:p_array_a ;
    rr:objectMap  [ rml:reference "valore_numerico"]
  ];
  rr:predicateObjectMap [
    rr:predicate grel:p_array_a ;
    rr:objectMap  [ rml:reference "valore_testuale"]
  ];
  rr:predicateObjectMap [
    rr:predicate grel:p_array_a ;
    rr:objectMap  [ rml:reference "cas"]
  ];
  rr:predicateObjectMap [
    rr:predicate grel:p_array_a ;
    rr:objectMap  [ rml:reference "wise"]
  ];
  rr:predicateObjectMap [
    rr:predicate grel:p_array_a ;
    rr:objectMap  [ rml:reference "other"]
  ];
  rr:predicateObjectMap [
    rr:predicate grel:p_array_a ;
    rr:objectMap  [ rml:reference "unita_di_misura_testuale"]
  ];
  rr:predicateObjectMap [
    rr:predicate grel:p_array_a ;
    rr:objectMap  [ rml:reference "unita_di_misura"]
  ];
  rr:predicateObjectMap [
    rr:predicate grel:p_array_a ;
    rr:objectMap  [ rml:reference "formula_parametro"]
  ];
  rr:predicateObjectMap [
    rr:predicate grel:p_array_a ;
    rr:objectMap  [ rml:reference "anno"]
  ];
  rr:predicateObjectMap [
    rr:predicate grel:p_string_sep ;
    rr:objectMap [ rr:constant "" ]
  ];
].

<#MD5CorsoDAcqua>
fnml:functionValue [
  rr:predicateObjectMap [
   rr:predicate fno:executes ;
   rr:objectMap [ rr:constant grel:string_md5 ]
  ];
  rr:predicateObjectMap [
   rr:predicate grel:valueParameter ;
   rr:objectMap <#ArrayJoinCorsoCorpo>
  ]
].

<#ArrayJoinCorsoCorpo>
fnml:functionValue [
 rr:predicateObjectMap [
   rr:predicate fno:executes ;
   rr:objectMap [ rr:constant grel:array_join ]
 ] ;
 rr:predicateObjectMap [
   rr:predicate grel:p_array_a ;
   rr:objectMap  [ rml:reference "corso_d_acqua"]
 ];
 rr:predicateObjectMap [
   rr:predicate grel:p_array_a ;
   rr:objectMap [ rml:reference "corpo_idrico"]
 ];
 rr:predicateObjectMap [
   rr:predicate grel:p_string_sep ;
   rr:objectMap [ rr:constant "" ]
 ]
].
